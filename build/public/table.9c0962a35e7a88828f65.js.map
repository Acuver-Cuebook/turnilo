{"version":3,"sources":["webpack:///./src/client/components/tabular-scroller/dimensions.ts","webpack:///./src/client/components/bubble-title/bubble-title.tsx","webpack:///./src/client/components/modal-bubble/modal-bubble.tsx","webpack:///./src/client/components/highlight-modal/highlight-modal.tsx","webpack:///./src/client/components/tabular-scroller/visible-rows/visible-rows.tsx","webpack:///./src/client/components/tabular-scroller/utils/measure-columns-count.ts","webpack:///./src/client/components/tabular-scroller/sort-icon/sort-icon.tsx","webpack:///./src/client/components/tabular-scroller/splits/split-value.tsx","webpack:///./src/client/components/tabular-scroller/corner/corner.tsx","webpack:///./src/client/utils/react/with-props.tsx","webpack:///./src/client/components/tabular-scroller/utils/get-scales-for-columns.ts","webpack:///./src/client/components/tabular-scroller/visible-rows/visible-index-range.ts","webpack:///./src/client/components/tabular-scroller/measures/measure-background.tsx","webpack:///./src/client/components/tabular-scroller/measures/measure-cell.tsx","webpack:///./src/client/components/tabular-scroller/measures/measure-value.tsx","webpack:///./src/client/components/tabular-scroller/measures/measure-row.tsx","webpack:///./src/client/components/tabular-scroller/measures/measure-rows.tsx","webpack:///./src/client/components/tabular-scroller/header/measures/measure-header-cell.tsx","webpack:///./src/client/components/tabular-scroller/header/measures/measures-header.tsx","webpack:///./src/client/components/tabular-scroller/splits/flattened-splits.tsx","webpack:///./src/client/components/tabular-scroller/header/splits/split-columns.tsx","webpack:///./src/client/components/tabular-scroller/splits/flattened-split-columns.tsx","webpack:///./src/client/visualizations/table/utils/calculate-hover-position.ts","webpack:///./src/client/visualizations/table/utils/filter-for-datum.ts","webpack:///./src/client/visualizations/table/interactions/interaction-controller.tsx","webpack:///./src/client/visualizations/table/body/splits/nested-split-name.ts","webpack:///./src/client/visualizations/table/body/splits/nested-splits.tsx","webpack:///./src/client/visualizations/table/body/splits/split-rows.tsx","webpack:///./src/client/visualizations/table/header/splits/combined-splits-title.tsx","webpack:///./src/client/visualizations/table/header/splits/splits-header.tsx","webpack:///./src/client/visualizations/table/highlight/highlight.tsx","webpack:///./src/client/visualizations/table/scrolled-table/scrolled-table.tsx","webpack:///./src/client/visualizations/table/utils/get-row-index-for-highlight.ts","webpack:///./src/client/visualizations/table/table.tsx"],"names":["HEADER_HEIGHT","INDENT_WIDTH","ROW_HEIGHT","SPACE_LEFT","MIN_DIMENSION_WIDTH","SEGMENT_WIDTH","MEASURE_WIDTH","SPACE_RIGHT","BubbleTitle","title","minWidth","clamp","length","className","style","ModalBubble","React","Component","el","this","modalRef","e","target","isInside","props","onClose","render","children","left","top","Fragment","mouseDown","onMouseDown","classNames","ref","setModalRef","direction","HighlightModal","acceptHighlight","dropHighlight","type","onClick","STRINGS","select","cancel","VisibleRows","renderRow","hoveredRowDatum","rowsData","visibleRowsIndexRange","highlightedRowIndex","start","end","visibleData","slice","map","datum","i","index","selected","highlight","dimmed","measureColumnsCount","essence","seriesCount","series","count","hasComparison","sortArrow","require","SortIcon","svg","SplitValue","Corner","withProps","extraProps","componentProps","getScalesForColumns","flatData","getConcreteSeries","groupBy","reactKey","seriesCollection","first","toMap","measureValues","d","selectValue","d3","domain","range","visibleIndexRange","rowCount","height","scrollTopOffset","Math","max","floor","min","ceil","MeasureBackground","width","MeasureCell","value","MeasureValue","barScale","showPrevious","cellWidth","currentValue","currentCell","key","formatValue","previousValue","SeriesDerivation","PREVIOUS","DELTA","lowerIsBetter","measure","formatter","MeasureRow","showBar","scales","concreteSeries","toArray","get","MeasureRows","rowWidth","showBarPredicate","hoverRow","data","rowStyle","MeasureHeaderCell","sort","sorted","sortDirection","commonSort","period","CURRENT","SeriesSort","reference","definition","MeasuresHeader","serie","currentMeasure","FlattenedSplits","splitLabel","SplitLabel","segmentWidth","segmentStyle","SplitColumnsHeader","splits","dataCube","split","findDimensionByName","dimensions","DimensionSort","FlattenedSplitColumns","timezone","formatSegment","HoverElement","seriesPosition","x","columnWidth","seriesList","xOffset","seriesIndex","nominalIndex","integerDivision","element","WHITESPACE","HEADER","getFilterFromDatum","flatDatum","splitNesting","splitCombines","size","filterClauses","take","segment","SplitType","number","NumberFilterClause","values","List","of","NumberRange","time","FixedTimeFilterClause","DateRange","string","StringFilterClause","action","StringFilterAction","IN","Set","boolean","BooleanFilterClause","InteractionController","scrollTop","y","part","state","position","calculateMousePosition","ROW","setState","setSortToSeries","highlightRow","clicker","getCommonSort","SortDirection","descending","sortWithDirection","equals","set","ascending","changeSplits","changeSort","VisStrategy","KeepAlways","saveHighlight","rowHighlight","clauses","getIdealColumnWidth","availableWidth","stage","getSegmentWidth","yOffset","rowIndex","rowPosition","handleClick","resetHover","setHoverRow","setScrollTop","nestedSplitName","nest","__nest","segmentValue","NestedSplits","SplitRows","collapseRows","rest","CombinedSplitsTitle","join","SplitsHeader","Highlighter","highlightedIndex","highlightedNesting","ScrolledTable","setSegmentWidth","splitLength","filter","columnsCount","rowsCount","visibleRowsRange","scrollerLayout","bodyWidth","bodyHeight","right","bottom","findIndex","getRowIndexForHighlight","showHighlight","maxSegmentWidth","lastSplitLevel","Direction","LEFT","onResize","layout","topGutter","leftGutter","topLeftCorner","body","overlay","onMouseMove","onMouseLeave","onScroll","TableVisualization","chartComponent","Table","shouldCollapseRows","visualizationSettings","flattenOptions","order","nestingName","flattenData","flatten"],"mappings":"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","file":"table.9c0962a35e7a88828f65.js","sourcesContent":["/*\n * Copyright 2017-2021 Allegro.pl\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const HEADER_HEIGHT = 38;\nexport const INDENT_WIDTH = 25;\nexport const ROW_HEIGHT = 30;\nexport const SPACE_LEFT = 10;\n\nexport const MIN_DIMENSION_WIDTH = 100;\nexport const SEGMENT_WIDTH = 300;\nexport const MEASURE_WIDTH = 130;\nexport const SPACE_RIGHT = 10;\n","/*\n * Copyright 2017-2019 Allegro.pl\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport { clamp } from \"../../utils/dom/dom\";\n\nconst PER_LETTER_PIXELS = 8;\nconst MIN_TITLE_WIDTH = 80;\nconst MAX_TITLE_WIDTH = 300;\n\ninterface BubbleTitleProps {\n  title: string;\n}\n\nexport const BubbleTitle: React.FunctionComponent<BubbleTitleProps> = ({ title }) => {\n  const minWidth = clamp(title.length * PER_LETTER_PIXELS, MIN_TITLE_WIDTH, MAX_TITLE_WIDTH);\n  return <div className=\"title\" style={{ minWidth }}>{title}</div>;\n};\n","/*\n * Copyright 2017-2019 Allegro.pl\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport { Fn } from \"../../../common/utils/general/general\";\nimport { classNames, isInside } from \"../../utils/dom/dom\";\nimport { BodyPortal } from \"../body-portal/body-portal\";\nimport { GlobalEventListener } from \"../global-event-listener/global-event-listener\";\nimport { Shpitz } from \"../shpitz/shpitz\";\nimport \"./modal-bubble.scss\";\n\ninterface ModalProps {\n  left: number;\n  top: number;\n  onClose: Fn;\n  className?: string;\n}\n\nexport class ModalBubble extends React.Component<ModalProps, {}> {\n\n  modalRef: HTMLDivElement;\n\n  setModalRef = (el: HTMLDivElement) => {\n    this.modalRef = el;\n  };\n\n  onMouseDown = (e: MouseEvent) => {\n    const target = e.target as Element;\n    if (isInside(target, this.modalRef)) return;\n    this.props.onClose();\n  };\n\n  render() {\n    const { className, children, left, top } = this.props;\n    return <React.Fragment>\n      <GlobalEventListener mouseDown={this.onMouseDown} />\n      <BodyPortal left={left} top={top}>\n        <div className={classNames(\"modal-bubble\", className)} ref={this.setModalRef}>\n          {children}\n          <Shpitz direction=\"up\" />\n        </div>\n      </BodyPortal>\n    </React.Fragment>;\n  }\n}\n","/*\n * Copyright 2017-2019 Allegro.pl\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport { Fn } from \"../../../common/utils/general/general\";\nimport { STRINGS } from \"../../config/constants\";\nimport { BubbleTitle } from \"../bubble-title/bubble-title\";\nimport { Button } from \"../button/button\";\nimport { ModalBubble } from \"../modal-bubble/modal-bubble\";\nimport \"./highlight-modal.scss\";\n\ninterface HighlightModalProps {\n  title: string;\n  left: number;\n  top: number;\n  dropHighlight: Fn;\n  acceptHighlight: Fn;\n}\n\nexport const HighlightModal: React.FunctionComponent<HighlightModalProps> = ({ title, children, left, top, acceptHighlight, dropHighlight }) =>\n  <ModalBubble className=\"highlight-modal\" left={left} top={top} onClose={dropHighlight}>\n    <BubbleTitle title={title} />\n    <div className=\"value\">{children}</div>\n    <div className=\"actions\">\n      <Button type=\"primary\" className=\"accept mini\" onClick={acceptHighlight} title={STRINGS.select} />\n      <Button type=\"secondary\" className=\"drop mini\" onClick={dropHighlight} title={STRINGS.cancel} />\n    </div>\n  </ModalBubble>;\n","/*\n * Copyright 2017-2018 Allegro.pl\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Datum, PseudoDatum } from \"plywood\";\nimport React from \"react\";\nimport { Unary } from \"../../../../common/utils/functional/functional\";\nimport { ROW_HEIGHT } from \"../dimensions\";\n\ninterface RowProps {\n  highlight: boolean;\n  dimmed: boolean;\n  top: number;\n  index: number;\n  datum: PseudoDatum;\n}\n\ninterface VisibleRowsProps {\n  visibleRowsIndexRange: [number, number];\n  highlightedRowIndex: number | null;\n  rowsData: PseudoDatum[];\n  hoveredRowDatum?: Datum;\n  renderRow: Unary<RowProps, JSX.Element>;\n}\n\nexport const VisibleRows: React.FunctionComponent<VisibleRowsProps> = props => {\n  const { renderRow, hoveredRowDatum, rowsData, visibleRowsIndexRange, highlightedRowIndex } = props;\n\n  const [start, end] = visibleRowsIndexRange;\n  const visibleData = rowsData.slice(start, end);\n\n  return <React.Fragment>\n    {visibleData.map((datum, i) => {\n      const index = start + i;\n      const top = index * ROW_HEIGHT;\n      const selected = index === highlightedRowIndex;\n      const dimmed = !selected && highlightedRowIndex !== null;\n      const hovered = datum === hoveredRowDatum;\n\n      const highlight = selected || hovered;\n\n      const rowProps: RowProps = {\n        highlight,\n        dimmed,\n        top,\n        index,\n        datum\n      };\n\n      return renderRow(rowProps);\n    })}\n  </React.Fragment>;\n};\n","/*\n * Copyright 2017-2018 Allegro.pl\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Essence } from \"../../../../common/models/essence/essence\";\n\nexport function measureColumnsCount(essence: Essence): number {\n  const seriesCount = essence.series.series.count();\n  return essence.hasComparison() ? seriesCount * 3 : seriesCount;\n}\n","/*\n * Copyright 2017-2018 Allegro.pl\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport { SortDirection } from \"../../../../common/models/sort/sort\";\nimport { classNames } from \"../../../utils/dom/dom\";\nimport { SvgIcon } from \"../../svg-icon/svg-icon\";\nimport \"./sort-arrow.scss\";\n\nconst sortArrow = require(\"../../../icons/sort-arrow.svg\");\n\ninterface SortIconProps {\n  direction: SortDirection;\n}\n\nexport const SortIcon: React.FunctionComponent<SortIconProps> = ({ direction }) =>\n  <SvgIcon svg={sortArrow} className={classNames(\"sort-arrow\", direction)} />;\n","/*\n * Copyright 2017-2018 Allegro.pl\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport { classNames } from \"../../../utils/dom/dom\";\nimport \"./split-value.scss\";\n\ninterface SplitValueProps {\n  highlight: boolean;\n  dimmed: boolean;\n  className?: string;\n  style: React.CSSProperties;\n}\n\nexport const SplitValue: React.FunctionComponent<SplitValueProps> = ({ className, highlight, dimmed, children, style }) =>\n  <div\n    className={classNames(\"split-value\", className, { dimmed, highlight })}\n    style={style}\n  >{children}</div>;\n","/*\n * Copyright 2017-2018 Allegro.pl\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport \"./corner.scss\";\n\nexport const Corner: React.FunctionComponent<{}> = ({ children }) =>\n  <div className=\"corner\">\n    {children}\n  </div>;\n","/*\n * Copyright 2017-2021 Allegro.pl\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport React from \"react\";\n\nexport function withProps<ComponentProps, ExtraProps>(Component: React.ComponentType<ComponentProps>, extraProps: ExtraProps): React.ComponentType<ComponentProps & ExtraProps> {\n  return function WrappedWithExtraProps(componentProps: ComponentProps) {\n    return <Component {...componentProps} {...extraProps} />;\n  };\n}\n","/*\n * Copyright 2017-2021 Allegro.pl\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as d3 from \"d3\";\nimport { Map } from \"immutable\";\nimport { Datum, PseudoDatum } from \"plywood\";\nimport { Essence } from \"../../../../common/models/essence/essence\";\n\nexport function getScalesForColumns(essence: Essence, flatData: PseudoDatum[]): Map<string, d3.ScaleLinear<number, number>> {\n  return essence.getConcreteSeries()\n    .groupBy(series => series.reactKey())\n    .map(seriesCollection => seriesCollection.first())\n    .toMap()\n    .map(series => {\n    const measureValues = flatData.map((d: Datum) => series.selectValue(d));\n\n    return d3.scaleLinear()\n      // Ensure that 0 is in there\n      .domain(d3.extent([0, ...measureValues]))\n      .range([0, 100]);\n  });\n}\n","/*\n * Copyright 2017-2018 Allegro.pl\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ROW_HEIGHT } from \"../dimensions\";\n\nexport function visibleIndexRange(rowCount: number, height: number, scrollTopOffset: number): [number, number] {\n  return [\n    Math.max(0, Math.floor(scrollTopOffset / ROW_HEIGHT)),\n    Math.min(rowCount, Math.ceil((scrollTopOffset + height) / ROW_HEIGHT))\n  ];\n}\n","/*\n * Copyright 2017-2018 Allegro.pl\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport React from \"react\";\nimport { classNames } from \"../../../utils/dom/dom\";\nimport \"./measure-background.scss\";\n\ninterface MeasureBackgroundProps {\n  width: number;\n  highlight: boolean;\n}\n\nexport const MeasureBackground: React.FunctionComponent<MeasureBackgroundProps> = ({ highlight, width }) =>\n  <div className=\"measure-background-container\">\n    <div className={classNames(\"measure-background\", { highlight })} style={{ width: width + \"%\" }} />\n  </div>;\n","/*\n * Copyright 2017-2018 Allegro.pl\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport \"./measure-cell.scss\";\n\ninterface MeasureCellProps {\n  width: number;\n  value: string | JSX.Element;\n}\n\nexport const MeasureCell: React.FunctionComponent<MeasureCellProps> = props => {\n  const { width, value, children } = props;\n  return <div className=\"measure-cell\" style={{ width }}>\n    {children}\n    <div className=\"measure-label\">{value}</div>\n  </div>;\n};\n","/*\n * Copyright 2017-2018 Allegro.pl\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as d3 from \"d3\";\nimport { Datum } from \"plywood\";\nimport React from \"react\";\nimport { ConcreteSeries, SeriesDerivation } from \"../../../../common/models/series/concrete-series\";\nimport { Delta } from \"../../delta/delta\";\nimport { MeasureBackground } from \"./measure-background\";\nimport { MeasureCell } from \"./measure-cell\";\n\ninterface MeasureValueProps {\n  series: ConcreteSeries;\n  datum: Datum;\n  barScale?: d3.ScaleLinear<number, number>;\n  cellWidth: number;\n  showPrevious: boolean;\n  highlight: boolean;\n}\n\nexport const MeasureValue: React.FunctionComponent<MeasureValueProps> = props => {\n  const { series, datum, barScale, highlight, showPrevious, cellWidth } = props;\n\n  const currentValue = series.selectValue(datum);\n\n  const currentCell = <MeasureCell\n    key={series.reactKey()}\n    width={cellWidth}\n    value={series.formatValue(datum)}\n  >\n    {barScale && <MeasureBackground highlight={highlight} width={barScale(currentValue)} />}\n  </MeasureCell>;\n\n  if (!showPrevious) {\n    return currentCell;\n  }\n\n  const previousValue = series.selectValue(datum, SeriesDerivation.PREVIOUS);\n\n  return <React.Fragment>\n    {currentCell}\n    <MeasureCell\n      key={series.reactKey(SeriesDerivation.PREVIOUS)}\n      width={cellWidth}\n      value={series.formatValue(datum, SeriesDerivation.PREVIOUS)}>\n      {barScale && <MeasureBackground highlight={highlight} width={barScale(previousValue)} />}\n    </MeasureCell>\n    <MeasureCell\n      width={cellWidth}\n      key={series.reactKey(SeriesDerivation.DELTA)}\n      value={<Delta\n        currentValue={currentValue}\n        previousValue={previousValue}\n        lowerIsBetter={series.measure.lowerIsBetter}\n        formatter={series.formatter()}\n      />} />\n  </React.Fragment>;\n};\n","/*\n * Copyright 2017-2018 Allegro.pl\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as d3 from \"d3\";\nimport { Map } from \"immutable\";\nimport { Datum } from \"plywood\";\nimport React from \"react\";\nimport { Essence } from \"../../../../common/models/essence/essence\";\nimport { classNames } from \"../../../utils/dom/dom\";\nimport \"./measure-row.scss\";\nimport { MeasureValue } from \"./measure-value\";\n\ninterface MeasureRowProps {\n  essence: Essence;\n  highlight: boolean;\n  dimmed: boolean;\n  style: React.CSSProperties;\n  datum: Datum;\n  cellWidth: number;\n  scales: Map<string, d3.ScaleLinear<number, number>>;\n  showBar: boolean;\n}\n\nexport const MeasureRow: React.FunctionComponent<MeasureRowProps> = props => {\n  const { datum, showBar, scales, cellWidth, highlight, dimmed, style, essence } = props;\n\n  const concreteSeries = essence.getConcreteSeries().toArray();\n\n  return <div\n    className={classNames(\"measure-row\", { highlight, dimmed })}\n    style={style}\n  >\n    {concreteSeries.map(series => {\n      return <MeasureValue\n        key={series.reactKey()}\n        series={series}\n        datum={datum}\n        highlight={highlight}\n        barScale={showBar ? scales.get(series.reactKey()) : null}\n        cellWidth={cellWidth}\n        showPrevious={essence.hasComparison()} />;\n    })}\n  </div>;\n};\n","/*\n * Copyright 2017-2018 Allegro.pl\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as d3 from \"d3\";\nimport { Map } from \"immutable\";\nimport { Datum, PseudoDatum } from \"plywood\";\nimport React from \"react\";\nimport { Essence } from \"../../../../common/models/essence/essence\";\nimport { Predicate } from \"../../../../common/utils/functional/functional\";\nimport { VisibleRows } from \"../visible-rows/visible-rows\";\nimport { MeasureRow } from \"./measure-row\";\n\ninterface MeasureRowsProps {\n  visibleRowsIndexRange: [number, number];\n  essence: Essence;\n  highlightedRowIndex: number | null;\n  scales: Map<string, d3.ScaleLinear<number, number>>;\n  data: PseudoDatum[];\n  hoverRow?: Datum;\n  cellWidth: number;\n  rowWidth: number;\n  showBarPredicate: Predicate<Datum>;\n}\n\nexport const MeasureRows: React.FunctionComponent<MeasureRowsProps> = props => {\n  const { rowWidth, showBarPredicate, essence, cellWidth, hoverRow, scales, data, visibleRowsIndexRange, highlightedRowIndex } = props;\n\n  return <VisibleRows\n    visibleRowsIndexRange={visibleRowsIndexRange}\n    highlightedRowIndex={highlightedRowIndex}\n    hoveredRowDatum={hoverRow}\n    rowsData={data}\n    renderRow={props => {\n      const { index, top, datum, highlight, dimmed } = props;\n      const rowStyle: React.CSSProperties = { top, width: rowWidth };\n      const showBar = showBarPredicate(datum);\n\n      return <MeasureRow\n        key={`row_${index}`}\n        essence={essence}\n        highlight={highlight}\n        dimmed={dimmed}\n        style={rowStyle}\n        datum={datum}\n        cellWidth={cellWidth}\n        showBar={showBar}\n        scales={scales} />;\n    }} />;\n};\n","/*\n * Copyright 2017-2018 Allegro.pl\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport React from \"react\";\nimport { SortDirection } from \"../../../../../common/models/sort/sort\";\nimport { classNames } from \"../../../../utils/dom/dom\";\nimport { SortIcon } from \"../../sort-icon/sort-icon\";\nimport \"./measure-header-cell.scss\";\n\ninterface MeasureHeaderCellProps {\n  width: number;\n  title: string;\n  sort: SortDirection | null;\n  className?: string;\n}\n\nexport const MeasureHeaderCell: React.FunctionComponent<MeasureHeaderCellProps> = ({ sort, width, title, className }) => {\n  const sorted = sort !== null;\n  return <div\n    className={classNames(\"measure-header-cell\", className, { sorted })}\n    style={{ width }}>\n    <div className=\"title-wrap\">{title}</div>\n    {sort && <SortIcon direction={sort} />}\n  </div>;\n};\n","/*\n * Copyright 2017-2018 Allegro.pl\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport { ConcreteSeries, SeriesDerivation } from \"../../../../../common/models/series/concrete-series\";\nimport { SeriesSort, Sort, SortDirection } from \"../../../../../common/models/sort/sort\";\nimport { MeasureHeaderCell } from \"./measure-header-cell\";\n\ninterface MeasuresHeaderProps {\n  cellWidth: number;\n  series: ConcreteSeries[];\n  sort: Sort;\n  showPrevious: boolean;\n}\n\nfunction sortDirection(commonSort: Sort, series: ConcreteSeries, period = SeriesDerivation.CURRENT): SortDirection | null {\n  const isSortedBy = commonSort instanceof SeriesSort && commonSort.reference === series.definition.key() && commonSort.period === period;\n  return isSortedBy ? commonSort.direction : null;\n}\n\nexport const MeasuresHeader: React.FunctionComponent<MeasuresHeaderProps> = props => {\n  const { cellWidth, series, sort, showPrevious } = props;\n\n  return <React.Fragment>\n    {series.map(serie => {\n      const currentMeasure = <MeasureHeaderCell\n        key={serie.reactKey()}\n        width={cellWidth}\n        title={serie.title()}\n        sort={sortDirection(sort, serie)} />;\n\n      if (!showPrevious) {\n        return currentMeasure;\n      }\n\n      return <React.Fragment key={serie.reactKey()}>\n        {currentMeasure}\n        <MeasureHeaderCell\n          key={serie.reactKey(SeriesDerivation.PREVIOUS)}\n          width={cellWidth}\n          title={serie.title(SeriesDerivation.PREVIOUS)}\n          sort={sortDirection(sort, serie, SeriesDerivation.PREVIOUS)} />\n        <MeasureHeaderCell\n          className=\"measure-delta\"\n          key={serie.reactKey(SeriesDerivation.DELTA)}\n          width={cellWidth}\n          title=\"Difference\"\n          sort={sortDirection(sort, serie, SeriesDerivation.DELTA)} />\n      </React.Fragment>;\n    })}\n  </React.Fragment>;\n};\n","/*\n * Copyright 2017-2018 Allegro.pl\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Datum, PseudoDatum } from \"plywood\";\nimport React from \"react\";\nimport { SPACE_LEFT } from \"../dimensions\";\nimport { VisibleRows } from \"../visible-rows/visible-rows\";\nimport \"./flattened-splits.scss\";\nimport { SplitValue } from \"./split-value\";\n\nexport interface SplitLabelProps {\n  datum: Datum;\n}\n\ninterface FlattenedSplitsProps {\n  visibleRowsIndexRange: [number, number];\n  data: PseudoDatum[];\n  hoverRow?: Datum;\n  segmentWidth: number;\n  highlightedRowIndex: number | null;\n  splitLabel: React.ComponentType<SplitLabelProps>;\n}\n\nexport const FlattenedSplits: React.FunctionComponent<FlattenedSplitsProps> = props => {\n  const { splitLabel: SplitLabel, data, highlightedRowIndex, hoverRow, visibleRowsIndexRange, segmentWidth } = props;\n\n  return <div className=\"flattened-splits-rows\">\n    <VisibleRows\n      visibleRowsIndexRange={visibleRowsIndexRange}\n      highlightedRowIndex={highlightedRowIndex}\n      rowsData={data}\n      hoveredRowDatum={hoverRow}\n      renderRow={props => {\n        const { index, top, datum, highlight, dimmed } = props;\n        const segmentStyle = { width: segmentWidth - SPACE_LEFT, top };\n\n        return <SplitValue\n          key={`splits_${index}`}\n          className=\"flattened-splits-row\"\n          style={segmentStyle}\n          dimmed={dimmed}\n          highlight={highlight}>\n          <SplitLabel datum={datum} />\n        </SplitValue>;\n      }} />\n  </div>;\n};\n","/*\n * Copyright 2017-2018 Allegro.pl\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport { ClientDataCube } from \"../../../../../common/models/data-cube/data-cube\";\nimport { findDimensionByName } from \"../../../../../common/models/dimension/dimensions\";\nimport { DimensionSort, Sort, SortDirection } from \"../../../../../common/models/sort/sort\";\nimport { Split } from \"../../../../../common/models/split/split\";\nimport { Splits } from \"../../../../../common/models/splits/splits\";\nimport { Corner } from \"../../corner/corner\";\nimport { SortIcon } from \"../../sort-icon/sort-icon\";\nimport \"./split-columns.scss\";\n\ninterface SplitColumnsHeader {\n  dataCube: ClientDataCube;\n  sort?: Sort;\n  splits: Splits;\n}\n\nfunction sortDirection(split: Split, sort: Sort): SortDirection | null {\n  const isCurrentSort = sort instanceof DimensionSort && split.reference === sort.reference;\n  return isCurrentSort ? sort.direction : null;\n}\n\nexport const SplitColumnsHeader: React.FunctionComponent<SplitColumnsHeader> = ({ sort, splits, dataCube }) => {\n  return <Corner>\n    <div className=\"header-split-columns\">\n      {splits.splits.toArray().map(split => {\n        const { reference } = split;\n        const title = findDimensionByName(dataCube.dimensions, reference).title;\n        const direction = sortDirection(split, sort);\n        return <div className=\"header-split-column\" key={reference}>\n          <div className=\"header-split-column-title\">{title}</div>\n          {direction && <div className=\"header-split-column-sort-icon\">\n            <SortIcon direction={direction} />\n          </div>}\n        </div>;\n      })}\n    </div>\n  </Corner>;\n};\n","/*\n * Copyright 2017-2018 Allegro.pl\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Timezone } from \"chronoshift\";\nimport { List } from \"immutable\";\nimport { PseudoDatum } from \"plywood\";\nimport React from \"react\";\nimport { Split } from \"../../../../common/models/split/split\";\nimport { formatSegment } from \"../../../../common/utils/formatter/formatter\";\nimport \"./flattened-split-columns.scss\";\n\ninterface FlattenedSplitColumnsProps {\n  splits: List<Split>;\n  datum: PseudoDatum;\n  timezone: Timezone;\n}\n\nexport const FlattenedSplitColumns: React.FunctionComponent<FlattenedSplitColumnsProps> = ({ splits, datum, timezone }) =>\n  <React.Fragment>\n    {splits.map(split => {\n      const { reference } = split;\n      const value = split.selectValue(datum);\n      return <div key={reference} className=\"flattened-split-value\">{formatSegment(value, timezone)}</div>;\n    })}\n  </React.Fragment>;\n","/*\n * Copyright 2017-2018 Allegro.pl\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Datum, PseudoDatum } from \"plywood\";\nimport { Essence } from \"../../../../common/models/essence/essence\";\nimport { SeriesDerivation } from \"../../../../common/models/series/concrete-series\";\nimport { Series } from \"../../../../common/models/series/series\";\nimport { integerDivision } from \"../../../../common/utils/general/general\";\nimport { HEADER_HEIGHT, ROW_HEIGHT } from \"../../../components/tabular-scroller/dimensions\";\n\nfunction indexToPeriod(index: number): SeriesDerivation {\n  return [SeriesDerivation.CURRENT, SeriesDerivation.PREVIOUS, SeriesDerivation.DELTA][index % 3];\n}\n\nexport enum HoverElement { ROW, HEADER, WHITESPACE }\n\ninterface RowHover {\n  element: HoverElement.ROW;\n  datum: Datum;\n}\n\ninterface SeriesHover {\n  element: HoverElement.HEADER;\n  series: Series;\n  period: SeriesDerivation;\n}\n\ninterface WhiteSpaceHover {\n  element: HoverElement.WHITESPACE;\n}\n\nexport type PositionHover = RowHover | SeriesHover | WhiteSpaceHover;\n\nexport function seriesPosition(x: number, essence: Essence, segmentWidth: number, columnWidth: number): PositionHover {\n  const seriesList = essence.series.series;\n  const xOffset = x - segmentWidth;\n  const seriesIndex = Math.floor(xOffset / columnWidth);\n  if (essence.hasComparison()) {\n    const nominalIndex = integerDivision(seriesIndex, 3);\n    const series = seriesList.get(nominalIndex);\n    if (!series) return { element: HoverElement.WHITESPACE };\n    const period = indexToPeriod(seriesIndex);\n    return { element: HoverElement.HEADER, series, period };\n  }\n  const series = seriesList.get(seriesIndex);\n  if (!series) return { element: HoverElement.WHITESPACE };\n  return { element: HoverElement.HEADER, series, period: SeriesDerivation.CURRENT };\n}\n\nexport function rowPosition(y: number, data: PseudoDatum[]): PositionHover {\n  const yOffset = y - HEADER_HEIGHT;\n  const rowIndex = Math.floor(yOffset / ROW_HEIGHT);\n  const datum = data ? data[rowIndex] : null;\n  if (!datum) return { element: HoverElement.WHITESPACE };\n  return { element: HoverElement.ROW, datum };\n}\n","/*\n * Copyright 2017-2018 Allegro.pl\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { List, Set } from \"immutable\";\nimport { PseudoDatum } from \"plywood\";\nimport { DateRange } from \"../../../../common/models/date-range/date-range\";\nimport {\n  BooleanFilterClause,\n  FilterClause,\n  FixedTimeFilterClause,\n  NumberFilterClause,\n  NumberRange,\n  StringFilterAction,\n  StringFilterClause\n} from \"../../../../common/models/filter-clause/filter-clause\";\nimport { SplitType } from \"../../../../common/models/split/split\";\nimport { Splits } from \"../../../../common/models/splits/splits\";\n\nexport function getFilterFromDatum(splits: Splits, flatDatum: PseudoDatum): List<FilterClause> {\n  const splitNesting = flatDatum[\"__nest\"];\n  const { splits: splitCombines } = splits;\n\n  if (splitNesting === 0 || splitNesting > splitCombines.size) return null;\n\n  const filterClauses = splitCombines\n    .take(splitNesting)\n    .map(({ reference, type }) => {\n      const segment: any = flatDatum[reference];\n\n      switch (type) {\n        case SplitType.number:\n          return new NumberFilterClause({ reference, values: List.of(new NumberRange(segment)) });\n        case SplitType.time:\n          return new FixedTimeFilterClause({ reference, values: List.of(new DateRange(segment)) });\n        case SplitType.string:\n          return new StringFilterClause({ reference, action: StringFilterAction.IN, values: Set.of(segment) });\n        case SplitType.boolean:\n          return new BooleanFilterClause({ reference, values: Set.of(segment) });\n      }\n    });\n\n  return List(filterClauses);\n}\n","/*\n * Copyright 2017-2021 Allegro.pl\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { List } from \"immutable\";\nimport { Datum, PseudoDatum } from \"plywood\";\nimport React from \"react\";\nimport { ReactNode } from \"react\";\nimport { Clicker } from \"../../../../common/models/clicker/clicker\";\nimport { Essence, VisStrategy } from \"../../../../common/models/essence/essence\";\nimport { FilterClause } from \"../../../../common/models/filter-clause/filter-clause\";\nimport { SeriesDerivation } from \"../../../../common/models/series/concrete-series\";\nimport { Series } from \"../../../../common/models/series/series\";\nimport { SeriesSort, SortDirection } from \"../../../../common/models/sort/sort\";\nimport { Stage } from \"../../../../common/models/stage/stage\";\nimport { Binary, Nullary, Ternary, Unary } from \"../../../../common/utils/functional/functional\";\nimport { Fn } from \"../../../../common/utils/general/general\";\nimport { ScrollerPart } from \"../../../components/scroller/scroller\";\nimport { MEASURE_WIDTH, SEGMENT_WIDTH, SPACE_LEFT } from \"../../../components/tabular-scroller/dimensions\";\nimport { measureColumnsCount } from \"../../../components/tabular-scroller/utils/measure-columns-count\";\nimport { Highlight } from \"../../highlight-controller/highlight\";\nimport { HoverElement, PositionHover, rowPosition, seriesPosition } from \"../utils/calculate-hover-position\";\nimport { getFilterFromDatum } from \"../utils/filter-for-datum\";\n\ninterface InteractionsProps {\n  handleClick: Ternary<number, number, ScrollerPart, void>;\n  setHoverRow: Ternary<number, number, ScrollerPart, void>;\n  resetHover: Fn;\n  setScrollTop: Binary<number, number, void>;\n  columnWidth: number;\n  scrollTop: number;\n  hoverRow?: Datum;\n}\n\ninterface InteractionControllerProps {\n  essence: Essence;\n  clicker: Clicker;\n  stage: Stage;\n  flatData: PseudoDatum[];\n  dropHighlight: Nullary<void>;\n  acceptHighlight: Nullary<void>;\n  highlight: Highlight | null;\n  saveHighlight: (clauses: List<FilterClause>, key?: string) => void;\n  children: Unary<InteractionsProps, ReactNode>;\n  segmentWidth: number;\n}\n\ninterface InteractionControllerState {\n  hoverRow?: Datum;\n  scrollTop: number;\n}\n\nexport class InteractionController extends React.Component<InteractionControllerProps, InteractionControllerState> {\n\n  state: InteractionControllerState = {\n    hoverRow: null,\n    scrollTop: 0\n  };\n\n  private setSortToSeries(series: Series, period: SeriesDerivation) {\n    const { clicker, essence } = this.props;\n    const { splits } = essence;\n    const commonSort = essence.getCommonSort();\n    const reference = series.key();\n    const sort = new SeriesSort({ reference, period, direction: SortDirection.descending });\n    const sortWithDirection = commonSort && commonSort.equals(sort) ? sort.set(\"direction\", SortDirection.ascending) : sort;\n    clicker.changeSplits(splits.changeSort(sortWithDirection), VisStrategy.KeepAlways); // set all to measure\n  }\n\n  private highlightRow(datum: Datum) {\n    const { essence: { splits }, highlight, saveHighlight, dropHighlight } = this.props;\n    const rowHighlight = getFilterFromDatum(splits, datum);\n\n    if (!rowHighlight) return;\n\n    const alreadyHighlighted = highlight !== null && rowHighlight.equals(highlight.clauses);\n    if (alreadyHighlighted) {\n      dropHighlight();\n      return;\n    }\n\n    saveHighlight(rowHighlight, null);\n  }\n\n  private getIdealColumnWidth(): number {\n    const availableWidth = this.props.stage.width - SPACE_LEFT - this.getSegmentWidth();\n    const count = measureColumnsCount(this.props.essence);\n\n    return count * MEASURE_WIDTH >= availableWidth ? MEASURE_WIDTH : availableWidth / count;\n  }\n\n  private calculateMousePosition(x: number, y: number, part: ScrollerPart): PositionHover {\n    const { flatData } = this.props;\n    switch (part) {\n      case \"top-gutter\":\n        return seriesPosition(x, this.props.essence, this.getSegmentWidth(), this.getIdealColumnWidth());\n      case \"body\":\n      case \"left-gutter\":\n        return rowPosition(y, flatData);\n      default:\n        return { element: HoverElement.WHITESPACE };\n    }\n  }\n\n  getSegmentWidth(): number {\n    const { segmentWidth } = this.props;\n    return segmentWidth || SEGMENT_WIDTH;\n  }\n\n  setHoverRow = (x: number, y: number, part: ScrollerPart) => {\n    const { hoverRow } = this.state;\n    const position = this.calculateMousePosition(x, y, part);\n    if (position.element === HoverElement.ROW && position.datum !== hoverRow) {\n      this.setState({ hoverRow: position.datum });\n    }\n  };\n\n  resetHover = () => {\n    const { hoverRow } = this.state;\n    if (hoverRow) {\n      this.setState({ hoverRow: null });\n    }\n  };\n\n  setScrollTop = (scrollTop: number) => this.setState({ scrollTop });\n\n  handleClick = (x: number, y: number, part: ScrollerPart) => {\n    const position = this.calculateMousePosition(x, y, part);\n\n    switch (position.element) {\n      case HoverElement.HEADER:\n        this.setSortToSeries(position.series, position.period);\n        break;\n      case HoverElement.ROW:\n        this.highlightRow(position.datum);\n        break;\n    }\n  };\n\n  render() {\n    const { children } = this.props;\n    const { hoverRow, scrollTop } = this.state;\n\n    return <React.Fragment>\n      {children({\n        columnWidth: this.getIdealColumnWidth(),\n        hoverRow,\n        scrollTop,\n        handleClick: this.handleClick,\n        resetHover: this.resetHover,\n        setHoverRow: this.setHoverRow,\n        setScrollTop: this.setScrollTop\n      })}\n    </React.Fragment>;\n  }\n}\n","/*\n * Copyright 2017-2018 Allegro.pl\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PseudoDatum } from \"plywood\";\nimport { Essence } from \"../../../../../common/models/essence/essence\";\nimport { formatSegment } from \"../../../../../common/utils/formatter/formatter\";\n\nexport function nestedSplitName(data: PseudoDatum, { timezone, splits: { splits } }: Essence): string {\n  const nest = data.__nest;\n  if (nest === 0) return \"Total\";\n  const split = splits.get(nest - 1);\n  const segmentValue = data[split.reference];\n  return formatSegment(segmentValue, timezone);\n}\n","/*\n * Copyright 2017-2018 Allegro.pl\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Datum, PseudoDatum } from \"plywood\";\nimport React from \"react\";\nimport { Essence } from \"../../../../../common/models/essence/essence\";\nimport { INDENT_WIDTH } from \"../../../../components/tabular-scroller/dimensions\";\nimport { SplitValue } from \"../../../../components/tabular-scroller/splits/split-value\";\nimport { VisibleRows } from \"../../../../components/tabular-scroller/visible-rows/visible-rows\";\nimport { nestedSplitName } from \"./nested-split-name\";\nimport \"./nested-splits.scss\";\n\ninterface NestedSplitsProps {\n  visibleRowsIndexRange: [number, number];\n  essence: Essence;\n  data: PseudoDatum[];\n  hoverRow?: Datum;\n  segmentWidth: number;\n  highlightedRowIndex: number | null;\n}\n\nexport const NestedSplits: React.FunctionComponent<NestedSplitsProps> = props => {\n  const { essence, data, highlightedRowIndex, hoverRow, visibleRowsIndexRange, segmentWidth } = props;\n\n  return <div className=\"nested-splits-rows\">\n    <VisibleRows\n      hoveredRowDatum={hoverRow}\n      visibleRowsIndexRange={visibleRowsIndexRange}\n      highlightedRowIndex={highlightedRowIndex}\n      rowsData={data}\n      renderRow={props => {\n        const { index, top, datum, highlight, dimmed } = props;\n        const nest = datum.__nest;\n        const left = Math.max(0, nest - 1) * INDENT_WIDTH;\n        const segmentStyle = { left, width: segmentWidth - left, top };\n\n        return <SplitValue\n          key={`segment_${index}`}\n          highlight={highlight}\n          dimmed={dimmed}\n          style={segmentStyle}>\n          {nestedSplitName(datum, essence)}\n        </SplitValue>;\n      }} />\n  </div>;\n};\n","/*\n * Copyright 2017-2018 Allegro.pl\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Datum, PseudoDatum } from \"plywood\";\nimport React from \"react\";\nimport { Essence } from \"../../../../../common/models/essence/essence\";\nimport { FlattenedSplitColumns } from \"../../../../components/tabular-scroller/splits/flattened-split-columns\";\nimport { FlattenedSplits } from \"../../../../components/tabular-scroller/splits/flattened-splits\";\nimport { NestedSplits } from \"./nested-splits\";\n\ninterface SplitRowsProps {\n  collapseRows: boolean;\n  visibleRowsIndexRange: [number, number];\n  essence: Essence;\n  data: PseudoDatum[];\n  hoverRow?: Datum;\n  segmentWidth: number;\n  highlightedRowIndex: number | null;\n}\n\nexport const SplitRows: React.FunctionComponent<SplitRowsProps> = props => {\n  const { collapseRows, ...rest } = props;\n  const { data, essence: { timezone, splits: { splits } } } = rest;\n  if (!data) return null;\n  return collapseRows ?\n    <FlattenedSplits\n      {...rest}\n      splitLabel={({ datum }) =>\n        <FlattenedSplitColumns splits={splits} datum={datum} timezone={timezone} />}\n    /> :\n    <NestedSplits {...rest} />;\n};\n","/*\n * Copyright 2017-2018 Allegro.pl\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport { ClientDataCube } from \"../../../../../common/models/data-cube/data-cube\";\nimport { findDimensionByName } from \"../../../../../common/models/dimension/dimensions\";\nimport { Splits } from \"../../../../../common/models/splits/splits\";\nimport { Corner } from \"../../../../components/tabular-scroller/corner/corner\";\n\ninterface CombinedSplitsTitle {\n  dataCube: ClientDataCube;\n  splits: Splits;\n}\n\nexport const CombinedSplitsTitle: React.FunctionComponent<CombinedSplitsTitle> = ({ dataCube, splits: { splits } }) => {\n  const title = splits.map(split => findDimensionByName(dataCube.dimensions, split.reference).title).join(\", \");\n  return <Corner>{title}</Corner>;\n};\n","/*\n * Copyright 2017-2018 Allegro.pl\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport { Essence } from \"../../../../../common/models/essence/essence\";\nimport { SplitColumnsHeader } from \"../../../../components/tabular-scroller/header/splits/split-columns\";\nimport { CombinedSplitsTitle } from \"./combined-splits-title\";\n\ninterface SplitHeaderProps {\n  essence: Essence;\n  collapseRows: boolean;\n}\n\nexport const SplitsHeader: React.FunctionComponent<SplitHeaderProps> = ({ essence, collapseRows }) => {\n  const { dataCube, splits } = essence;\n  return collapseRows ?\n    <SplitColumnsHeader dataCube={dataCube} splits={splits} /> :\n    <CombinedSplitsTitle dataCube={dataCube} splits={splits} />;\n};\n","/*\n * Copyright 2017-2018 Allegro.pl\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport { INDENT_WIDTH, ROW_HEIGHT } from \"../../../components/tabular-scroller/dimensions\";\nimport \"./highlight.scss\";\n\ninterface HighlighterProps {\n  highlightedIndex: number;\n  highlightedNesting: number;\n  scrollTopOffset: number;\n  collapseRows: boolean;\n}\n\nexport const Highlighter: React.FunctionComponent<HighlighterProps> = props => {\n  const { highlightedIndex, scrollTopOffset, highlightedNesting, collapseRows } = props;\n  const top = highlightedIndex * ROW_HEIGHT - scrollTopOffset;\n  const left = collapseRows ? 0 : Math.max(0, highlightedNesting - 1) * INDENT_WIDTH;\n  return <div className=\"highlight-cont\">\n    <div className=\"highlight\">\n      <div className=\"highlighter\" key=\"highlight\" style={{ top, left }} />\n    </div>\n  </div>;\n};\n","/*\n * Copyright 2017-2021 Allegro.pl\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Datum, PseudoDatum } from \"plywood\";\nimport React from \"react\";\nimport { Essence } from \"../../../../common/models/essence/essence\";\nimport { Stage } from \"../../../../common/models/stage/stage\";\nimport { Binary, Nullary, Ternary, Unary } from \"../../../../common/utils/functional/functional\";\nimport { Fn } from \"../../../../common/utils/general/general\";\nimport { HighlightModal } from \"../../../components/highlight-modal/highlight-modal\";\nimport { Direction, ResizeHandle } from \"../../../components/resize-handle/resize-handle\";\nimport { Scroller, ScrollerLayout, ScrollerPart } from \"../../../components/scroller/scroller\";\nimport { HEADER_HEIGHT, ROW_HEIGHT, SEGMENT_WIDTH, SPACE_RIGHT } from \"../../../components/tabular-scroller/dimensions\";\nimport { MeasuresHeader } from \"../../../components/tabular-scroller/header/measures/measures-header\";\nimport { MeasureRows } from \"../../../components/tabular-scroller/measures/measure-rows\";\nimport { getScalesForColumns } from \"../../../components/tabular-scroller/utils/get-scales-for-columns\";\nimport { measureColumnsCount } from \"../../../components/tabular-scroller/utils/measure-columns-count\";\nimport { visibleIndexRange } from \"../../../components/tabular-scroller/visible-rows/visible-index-range\";\nimport { Highlight } from \"../../highlight-controller/highlight\";\nimport { nestedSplitName } from \"../body/splits/nested-split-name\";\nimport { SplitRows } from \"../body/splits/split-rows\";\nimport { SplitsHeader } from \"../header/splits/splits-header\";\nimport { Highlighter } from \"../highlight/highlight\";\nimport { getRowIndexForHighlight } from \"../utils/get-row-index-for-highlight\";\n\nconst HIGHLIGHT_BUBBLE_V_OFFSET = -4;\n\ninterface ScrolledTableProps {\n  flatData: PseudoDatum[];\n  essence: Essence;\n  stage: Stage;\n  dropHighlight: Nullary<void>;\n  acceptHighlight: Nullary<void>;\n  highlight: Highlight | null;\n  handleClick: Ternary<number, number, ScrollerPart, void>;\n  setHoverRow: Ternary<number, number, ScrollerPart, void>;\n  resetHover: Fn;\n  setScrollTop: Binary<number, number, void>;\n  setSegmentWidth: Unary<number, void>;\n  columnWidth: number;\n  segmentWidth: number;\n  scrollTop: number;\n  hoverRow?: Datum;\n  collapseRows: boolean;\n  availableWidth: number;\n}\n\nexport const ScrolledTable: React.FunctionComponent<ScrolledTableProps> = props => {\n  const {\n    essence,\n    stage,\n    flatData,\n    handleClick,\n    setHoverRow,\n    resetHover,\n    setScrollTop,\n    setSegmentWidth,\n    segmentWidth,\n    columnWidth,\n    scrollTop,\n    acceptHighlight,\n    highlight,\n    hoverRow,\n    collapseRows,\n    dropHighlight,\n    availableWidth\n  } = props;\n  const splitLength = essence.splits.length();\n  const scales = getScalesForColumns(essence, flatData.filter(d => d.__nest === splitLength));\n  const columnsCount = measureColumnsCount(essence);\n  const rowsCount = flatData ? flatData.length : 0;\n  const visibleRowsRange = visibleIndexRange(rowsCount, stage.height, scrollTop);\n  const scrollerLayout: ScrollerLayout = {\n    // Inner dimensions\n    bodyWidth: columnWidth * columnsCount + SPACE_RIGHT,\n    bodyHeight: rowsCount * ROW_HEIGHT,\n\n    // Gutters\n    top: HEADER_HEIGHT,\n    right: 0,\n    bottom: 0,\n    left: segmentWidth\n  };\n\n  const highlightedRowIndex = getRowIndexForHighlight(essence, highlight, flatData);\n  const showHighlight = highlightedRowIndex !== null && flatData;\n  const maxSegmentWidth = availableWidth || SEGMENT_WIDTH;\n  const lastSplitLevel = essence.splits.length();\n\n  return <React.Fragment>\n    <ResizeHandle\n      direction={Direction.LEFT}\n      onResize={setSegmentWidth}\n      min={SEGMENT_WIDTH}\n      max={maxSegmentWidth}\n      value={segmentWidth}\n    />\n    <Scroller\n      layout={scrollerLayout}\n\n      topGutter={\n        <MeasuresHeader\n          cellWidth={columnWidth}\n          series={essence.getConcreteSeries().toArray()}\n          sort={essence.getCommonSort()}\n          showPrevious={essence.hasComparison()}\n        />\n      }\n\n      leftGutter={<SplitRows\n        collapseRows={collapseRows}\n        highlightedRowIndex={highlightedRowIndex}\n        visibleRowsIndexRange={visibleRowsRange}\n        hoverRow={hoverRow}\n        essence={essence}\n        data={flatData}\n        segmentWidth={segmentWidth}/>\n      }\n\n      topLeftCorner={<SplitsHeader essence={essence} collapseRows={collapseRows}/>}\n\n      body={flatData &&\n      <MeasureRows\n        hoverRow={hoverRow}\n        showBarPredicate={datum => datum.__nest === lastSplitLevel}\n        visibleRowsIndexRange={visibleRowsRange}\n        essence={essence}\n        highlightedRowIndex={highlightedRowIndex}\n        scales={scales}\n        data={flatData}\n        cellWidth={columnWidth}\n        rowWidth={columnWidth * columnsCount}/>}\n\n      overlay={showHighlight && <Highlighter\n        highlightedIndex={highlightedRowIndex}\n        highlightedNesting={flatData[highlightedRowIndex].__nest}\n        scrollTopOffset={scrollTop}\n        collapseRows={collapseRows}/>}\n\n      onClick={handleClick}\n      onMouseMove={setHoverRow}\n      onMouseLeave={resetHover}\n      onScroll={setScrollTop}\n\n    />\n    {highlightedRowIndex !== null &&\n    <HighlightModal\n      title={nestedSplitName(flatData[highlightedRowIndex], essence)}\n      left={stage.x + stage.width / 2}\n      top={stage.y + HEADER_HEIGHT + (highlightedRowIndex * ROW_HEIGHT) - scrollTop - HIGHLIGHT_BUBBLE_V_OFFSET}\n      acceptHighlight={acceptHighlight}\n      dropHighlight={dropHighlight}/>}\n  </React.Fragment>;\n};\n","/*\n * Copyright 2017-2021 Allegro.pl\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { PseudoDatum } from \"plywood\";\nimport { Essence } from \"../../../../common/models/essence/essence\";\nimport { Highlight } from \"../../highlight-controller/highlight\";\nimport { getFilterFromDatum } from \"./filter-for-datum\";\n\nexport function getRowIndexForHighlight(essence: Essence, highlight: Highlight | null, flatData?: PseudoDatum[]): number | null {\n  if (!flatData) return null;\n  if (highlight === null) return null;\n  const { splits } = essence;\n  const index = flatData.findIndex(d => highlight.clauses.equals(getFilterFromDatum(splits, d)));\n  if (index >= 0) return index;\n  return null;\n}\n","/*\n * Copyright 2015-2016 Imply Data, Inc.\n * Copyright 2017-2019 Allegro.pl\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FlattenOptions, PseudoDatum } from \"plywood\";\nimport React from \"react\";\nimport { ChartProps } from \"../../../common/models/chart-props/chart-props\";\nimport { Unary } from \"../../../common/utils/functional/functional\";\nimport { ImmutableRecord } from \"../../../common/utils/immutable-utils/immutable-utils\";\nimport { TableSettings } from \"../../../common/visualization-manifests/table/settings\";\nimport { SEGMENT_WIDTH } from \"../../components/tabular-scroller/dimensions\";\nimport { withProps } from \"../../utils/react/with-props\";\nimport {\n  ChartPanel,\n  DefaultVisualizationControls,\n  VisualizationProps\n} from \"../../views/cube-view/center-panel/center-panel\";\nimport { InteractionController } from \"./interactions/interaction-controller\";\nimport { ScrolledTable } from \"./scrolled-table/scrolled-table\";\nimport \"./table.scss\";\n\ninterface TableVisualizationState {\n  segmentWidth: number;\n}\n\nexport default class TableVisualization extends React.Component<VisualizationProps, TableVisualizationState> {\n  state: TableVisualizationState = {\n    segmentWidth: SEGMENT_WIDTH\n  };\n\n  setSegmentWidth = (segmentWidth: number) => {\n    this.setState({ segmentWidth });\n  }\n\n  render() {\n    const { segmentWidth } = this.state;\n    return <React.Fragment>\n      <DefaultVisualizationControls {...this.props} />\n      <ChartPanel\n        {...this.props}\n        chartComponent={withProps(Table, { segmentWidth, setSegmentWidth: this.setSegmentWidth })}/>\n    </React.Fragment>;\n  }\n}\n\nconst MIN_DIMENSION_WIDTH = 100;\n\ninterface TableProps extends ChartProps {\n  setSegmentWidth: Unary<number, void>;\n  segmentWidth: number;\n}\n\nclass Table extends React.Component<TableProps> {\n\n  private shouldCollapseRows(): boolean {\n    const { essence: { visualizationSettings } } = this.props;\n    const { collapseRows } = visualizationSettings as ImmutableRecord<TableSettings>;\n    return collapseRows;\n  }\n\n  private flattenOptions(): FlattenOptions {\n    if (this.shouldCollapseRows()) {\n      return { order: \"inline\", nestingName: \"__nest\" };\n    }\n    return { order: \"preorder\", nestingName: \"__nest\" };\n  }\n\n  private flattenData(): PseudoDatum[] {\n    const { essence: { splits }, data } = this.props;\n    if (splits.length() === 0) return [];\n    const flatDataset = data.flatten(this.flattenOptions());\n    return flatDataset.data;\n  }\n\n  render() {\n    const { essence, clicker, stage, acceptHighlight, saveHighlight, highlight, dropHighlight, setSegmentWidth, segmentWidth } = this.props;\n    const flatData = this.flattenData();\n    const collapseRows = this.shouldCollapseRows();\n    const availableWidth = stage.width - MIN_DIMENSION_WIDTH;\n\n    return <div className=\"table-container\">\n      <InteractionController\n        essence={essence}\n        clicker={clicker}\n        stage={stage}\n        flatData={flatData}\n        dropHighlight={dropHighlight}\n        acceptHighlight={acceptHighlight}\n        highlight={highlight}\n        segmentWidth={segmentWidth}\n        saveHighlight={saveHighlight}>\n        {({\n            setScrollTop,\n            setHoverRow,\n            resetHover,\n            handleClick,\n            columnWidth,\n            hoverRow,\n            scrollTop\n          }) =>\n          <ScrolledTable\n            flatData={flatData}\n            essence={essence}\n            stage={stage}\n            dropHighlight={dropHighlight}\n            acceptHighlight={acceptHighlight}\n            highlight={highlight}\n            handleClick={handleClick}\n            setHoverRow={setHoverRow}\n            resetHover={resetHover}\n            setScrollTop={setScrollTop}\n            setSegmentWidth={setSegmentWidth}\n            columnWidth={columnWidth}\n            segmentWidth={segmentWidth}\n            scrollTop={scrollTop}\n            hoverRow={hoverRow}\n            collapseRows={collapseRows}\n            availableWidth={availableWidth}\n          />}\n      </InteractionController>\n    </div>;\n  }\n}\n"],"sourceRoot":""}