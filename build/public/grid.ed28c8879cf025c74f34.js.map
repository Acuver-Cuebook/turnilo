{"version":3,"sources":["webpack:///./src/client/utils/dataset/selectors/selectors.ts","webpack:///./src/client/components/tabular-scroller/dimensions.ts","webpack:///./src/client/components/tabular-scroller/visible-rows/visible-rows.tsx","webpack:///./src/client/components/tabular-scroller/utils/measure-columns-count.ts","webpack:///./src/client/components/tabular-scroller/sort-icon/sort-icon.tsx","webpack:///./src/client/components/tabular-scroller/splits/split-value.tsx","webpack:///./src/client/components/tabular-scroller/corner/corner.tsx","webpack:///./src/client/utils/react/with-props.tsx","webpack:///./src/client/components/tabular-scroller/utils/get-scales-for-columns.ts","webpack:///./src/client/components/tabular-scroller/visible-rows/visible-index-range.ts","webpack:///./src/client/components/tabular-scroller/measures/measure-background.tsx","webpack:///./src/client/components/tabular-scroller/measures/measure-cell.tsx","webpack:///./src/client/components/tabular-scroller/measures/measure-value.tsx","webpack:///./src/client/components/tabular-scroller/measures/measure-row.tsx","webpack:///./src/client/components/tabular-scroller/measures/measure-rows.tsx","webpack:///./src/client/components/tabular-scroller/header/measures/measure-header-cell.tsx","webpack:///./src/client/components/tabular-scroller/header/measures/measures-header.tsx","webpack:///./src/client/components/tabular-scroller/splits/flattened-splits.tsx","webpack:///./src/client/components/tabular-scroller/header/splits/split-columns.tsx","webpack:///./src/client/components/tabular-scroller/splits/flattened-split-columns.tsx","webpack:///./src/client/visualizations/grid/utils/hover-position.ts","webpack:///./src/client/visualizations/grid/utils/main-split.ts","webpack:///./src/client/visualizations/grid/interaction-controller.tsx","webpack:///./src/client/visualizations/grid/utils/total-datum.ts","webpack:///./src/client/visualizations/grid/split-labels.tsx","webpack:///./src/client/visualizations/grid/scrolled-grid.tsx","webpack:///./src/client/visualizations/grid/grid-split-menu.tsx","webpack:///./src/client/visualizations/grid/grid-split-tile.tsx","webpack:///./src/client/visualizations/grid/visualization-controls.tsx","webpack:///./src/client/visualizations/grid/grid.tsx"],"names":["selectMainDatum","dataset","data","selectSplitDataset","datum","SPLIT","selectDatums","selectSplitDatums","compose","selectFirstSplitDataset","selectFirstSplitDatums","HEADER_HEIGHT","INDENT_WIDTH","ROW_HEIGHT","SPACE_LEFT","MIN_DIMENSION_WIDTH","SEGMENT_WIDTH","MEASURE_WIDTH","SPACE_RIGHT","VisibleRows","props","renderRow","hoveredRowDatum","rowsData","visibleRowsIndexRange","highlightedRowIndex","start","end","visibleData","slice","Fragment","map","i","index","top","selected","highlight","dimmed","measureColumnsCount","essence","seriesCount","series","count","hasComparison","sortArrow","require","SortIcon","direction","svg","className","classNames","SplitValue","children","style","Corner","withProps","Component","extraProps","componentProps","getScalesForColumns","flatData","getConcreteSeries","groupBy","reactKey","seriesCollection","first","toMap","measureValues","d","selectValue","d3","domain","range","visibleIndexRange","rowCount","height","scrollTopOffset","Math","max","floor","min","ceil","MeasureBackground","width","MeasureCell","value","MeasureValue","barScale","showPrevious","cellWidth","currentValue","currentCell","key","formatValue","previousValue","SeriesDerivation","PREVIOUS","DELTA","lowerIsBetter","measure","formatter","MeasureRow","showBar","scales","concreteSeries","toArray","get","MeasureRows","rowWidth","showBarPredicate","hoverRow","rowStyle","MeasureHeaderCell","sort","title","sorted","sortDirection","commonSort","period","CURRENT","isSortedBy","SeriesSort","reference","definition","MeasuresHeader","serie","currentMeasure","FlattenedSplits","SplitLabel","splitLabel","segmentWidth","segmentStyle","SplitColumnsHeader","splits","dataCube","split","findDimensionByName","dimensions","DimensionSort","FlattenedSplitColumns","timezone","formatSegment","seriesPosition","x","columnWidth","seriesList","xOffset","seriesIndex","nominalIndex","integerDivision","element","mainSplit","getSplit","InteractionController","scrollTop","setState","y","part","position","calculatePosition","setSortToDimension","dimension","setSortToSeries","this","stage","availableWidth","SortDirection","descending","setSort","name","clicker","newSort","equals","set","ascending","changeSplits","replace","changeSort","VisStrategy","KeepAlways","splitColumnWidth","length","splitIndex","splitPosition","getIdealColumnWidth","state","handleClick","setScrollTop","React","isTotalDatum","SplitLabels","ScrolledGrid","setSegmentWidth","datums","flatten","order","nestingName","filter","complement","rowsCount","visibleRowsRange","columnsCount","maxSegmentWidth","mainSort","layout","bodyWidth","bodyHeight","bottom","left","right","Direction","LEFT","onResize","onScroll","onClick","topGutter","leftGutter","topLeftCorner","body","GridSplitMenu","isContinuous","SplitGranularityMenu","granularity","granularityToString","bucket","saveSplit","createSplit","validateSplit","containerStage","onClose","openOn","onSave","isValid","validate","granularityChange","saveGranularity","GridControlMenu","initState","limit","sortOptions","DimensionSortOn","seriesSortOns","SortOn","fromSort","options","onChange","saveSort","selectedLimit","limits","GRID_LIMITS","includeNone","onLimitSelect","saveLimit","GridSplitTile","isOpened","open","removeSplit","updateSplit","openMenu","closeMenu","dragStart","enabled","getTitle","remove","e","stopPropagation","ref","setRef","disabled","toKey","draggable","onDragStart","GridSplitTilesRow","splitTileComponent","GridVisualizationControls","splitTilesRow","Grid","GridVisualization","chartComponent"],"mappings":"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","file":"grid.ed28c8879cf025c74f34.js","sourcesContent":["/*\n * Copyright 2017-2018 Allegro.pl\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Dataset, Datum } from \"plywood\";\nimport { compose } from \"../../../../common/utils/functional/functional\";\nimport { SPLIT } from \"../../../config/constants\";\n\nexport const selectMainDatum = (dataset: Dataset): Datum =>\n  dataset.data[0];\n\nexport const selectSplitDataset = (datum: Datum): Dataset =>\n  datum[SPLIT] as Dataset;\n\nexport const selectDatums = (dataset: Dataset): Datum[] =>\n  dataset.data;\n\nexport const selectSplitDatums: (datum: Datum) => Datum[] =\n  compose(selectSplitDataset, selectDatums);\n\nexport const selectFirstSplitDataset: (dataset: Dataset) => Dataset =\n  compose(selectMainDatum, selectSplitDataset);\n\nexport const selectFirstSplitDatums: (dataset: Dataset) => Datum[] =\n  compose(selectFirstSplitDataset, selectDatums);\n","/*\n * Copyright 2017-2021 Allegro.pl\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const HEADER_HEIGHT = 38;\nexport const INDENT_WIDTH = 25;\nexport const ROW_HEIGHT = 30;\nexport const SPACE_LEFT = 10;\n\nexport const MIN_DIMENSION_WIDTH = 100;\nexport const SEGMENT_WIDTH = 300;\nexport const MEASURE_WIDTH = 130;\nexport const SPACE_RIGHT = 10;\n","/*\n * Copyright 2017-2018 Allegro.pl\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Datum, PseudoDatum } from \"plywood\";\nimport React from \"react\";\nimport { Unary } from \"../../../../common/utils/functional/functional\";\nimport { ROW_HEIGHT } from \"../dimensions\";\n\ninterface RowProps {\n  highlight: boolean;\n  dimmed: boolean;\n  top: number;\n  index: number;\n  datum: PseudoDatum;\n}\n\ninterface VisibleRowsProps {\n  visibleRowsIndexRange: [number, number];\n  highlightedRowIndex: number | null;\n  rowsData: PseudoDatum[];\n  hoveredRowDatum?: Datum;\n  renderRow: Unary<RowProps, JSX.Element>;\n}\n\nexport const VisibleRows: React.FunctionComponent<VisibleRowsProps> = props => {\n  const { renderRow, hoveredRowDatum, rowsData, visibleRowsIndexRange, highlightedRowIndex } = props;\n\n  const [start, end] = visibleRowsIndexRange;\n  const visibleData = rowsData.slice(start, end);\n\n  return <React.Fragment>\n    {visibleData.map((datum, i) => {\n      const index = start + i;\n      const top = index * ROW_HEIGHT;\n      const selected = index === highlightedRowIndex;\n      const dimmed = !selected && highlightedRowIndex !== null;\n      const hovered = datum === hoveredRowDatum;\n\n      const highlight = selected || hovered;\n\n      const rowProps: RowProps = {\n        highlight,\n        dimmed,\n        top,\n        index,\n        datum\n      };\n\n      return renderRow(rowProps);\n    })}\n  </React.Fragment>;\n};\n","/*\n * Copyright 2017-2018 Allegro.pl\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Essence } from \"../../../../common/models/essence/essence\";\n\nexport function measureColumnsCount(essence: Essence): number {\n  const seriesCount = essence.series.series.count();\n  return essence.hasComparison() ? seriesCount * 3 : seriesCount;\n}\n","/*\n * Copyright 2017-2018 Allegro.pl\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport { SortDirection } from \"../../../../common/models/sort/sort\";\nimport { classNames } from \"../../../utils/dom/dom\";\nimport { SvgIcon } from \"../../svg-icon/svg-icon\";\nimport \"./sort-arrow.scss\";\n\nconst sortArrow = require(\"../../../icons/sort-arrow.svg\");\n\ninterface SortIconProps {\n  direction: SortDirection;\n}\n\nexport const SortIcon: React.FunctionComponent<SortIconProps> = ({ direction }) =>\n  <SvgIcon svg={sortArrow} className={classNames(\"sort-arrow\", direction)} />;\n","/*\n * Copyright 2017-2018 Allegro.pl\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport { classNames } from \"../../../utils/dom/dom\";\nimport \"./split-value.scss\";\n\ninterface SplitValueProps {\n  highlight: boolean;\n  dimmed: boolean;\n  className?: string;\n  style: React.CSSProperties;\n}\n\nexport const SplitValue: React.FunctionComponent<SplitValueProps> = ({ className, highlight, dimmed, children, style }) =>\n  <div\n    className={classNames(\"split-value\", className, { dimmed, highlight })}\n    style={style}\n  >{children}</div>;\n","/*\n * Copyright 2017-2018 Allegro.pl\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport \"./corner.scss\";\n\nexport const Corner: React.FunctionComponent<{}> = ({ children }) =>\n  <div className=\"corner\">\n    {children}\n  </div>;\n","/*\n * Copyright 2017-2021 Allegro.pl\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport React from \"react\";\n\nexport function withProps<ComponentProps, ExtraProps>(Component: React.ComponentType<ComponentProps>, extraProps: ExtraProps): React.ComponentType<ComponentProps & ExtraProps> {\n  return function WrappedWithExtraProps(componentProps: ComponentProps) {\n    return <Component {...componentProps} {...extraProps} />;\n  };\n}\n","/*\n * Copyright 2017-2021 Allegro.pl\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as d3 from \"d3\";\nimport { Map } from \"immutable\";\nimport { Datum, PseudoDatum } from \"plywood\";\nimport { Essence } from \"../../../../common/models/essence/essence\";\n\nexport function getScalesForColumns(essence: Essence, flatData: PseudoDatum[]): Map<string, d3.ScaleLinear<number, number>> {\n  return essence.getConcreteSeries()\n    .groupBy(series => series.reactKey())\n    .map(seriesCollection => seriesCollection.first())\n    .toMap()\n    .map(series => {\n    const measureValues = flatData.map((d: Datum) => series.selectValue(d));\n\n    return d3.scaleLinear()\n      // Ensure that 0 is in there\n      .domain(d3.extent([0, ...measureValues]))\n      .range([0, 100]);\n  });\n}\n","/*\n * Copyright 2017-2018 Allegro.pl\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ROW_HEIGHT } from \"../dimensions\";\n\nexport function visibleIndexRange(rowCount: number, height: number, scrollTopOffset: number): [number, number] {\n  return [\n    Math.max(0, Math.floor(scrollTopOffset / ROW_HEIGHT)),\n    Math.min(rowCount, Math.ceil((scrollTopOffset + height) / ROW_HEIGHT))\n  ];\n}\n","/*\n * Copyright 2017-2018 Allegro.pl\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport React from \"react\";\nimport { classNames } from \"../../../utils/dom/dom\";\nimport \"./measure-background.scss\";\n\ninterface MeasureBackgroundProps {\n  width: number;\n  highlight: boolean;\n}\n\nexport const MeasureBackground: React.FunctionComponent<MeasureBackgroundProps> = ({ highlight, width }) =>\n  <div className=\"measure-background-container\">\n    <div className={classNames(\"measure-background\", { highlight })} style={{ width: width + \"%\" }} />\n  </div>;\n","/*\n * Copyright 2017-2018 Allegro.pl\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport \"./measure-cell.scss\";\n\ninterface MeasureCellProps {\n  width: number;\n  value: string | JSX.Element;\n}\n\nexport const MeasureCell: React.FunctionComponent<MeasureCellProps> = props => {\n  const { width, value, children } = props;\n  return <div className=\"measure-cell\" style={{ width }}>\n    {children}\n    <div className=\"measure-label\">{value}</div>\n  </div>;\n};\n","/*\n * Copyright 2017-2018 Allegro.pl\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as d3 from \"d3\";\nimport { Datum } from \"plywood\";\nimport React from \"react\";\nimport { ConcreteSeries, SeriesDerivation } from \"../../../../common/models/series/concrete-series\";\nimport { Delta } from \"../../delta/delta\";\nimport { MeasureBackground } from \"./measure-background\";\nimport { MeasureCell } from \"./measure-cell\";\n\ninterface MeasureValueProps {\n  series: ConcreteSeries;\n  datum: Datum;\n  barScale?: d3.ScaleLinear<number, number>;\n  cellWidth: number;\n  showPrevious: boolean;\n  highlight: boolean;\n}\n\nexport const MeasureValue: React.FunctionComponent<MeasureValueProps> = props => {\n  const { series, datum, barScale, highlight, showPrevious, cellWidth } = props;\n\n  const currentValue = series.selectValue(datum);\n\n  const currentCell = <MeasureCell\n    key={series.reactKey()}\n    width={cellWidth}\n    value={series.formatValue(datum)}\n  >\n    {barScale && <MeasureBackground highlight={highlight} width={barScale(currentValue)} />}\n  </MeasureCell>;\n\n  if (!showPrevious) {\n    return currentCell;\n  }\n\n  const previousValue = series.selectValue(datum, SeriesDerivation.PREVIOUS);\n\n  return <React.Fragment>\n    {currentCell}\n    <MeasureCell\n      key={series.reactKey(SeriesDerivation.PREVIOUS)}\n      width={cellWidth}\n      value={series.formatValue(datum, SeriesDerivation.PREVIOUS)}>\n      {barScale && <MeasureBackground highlight={highlight} width={barScale(previousValue)} />}\n    </MeasureCell>\n    <MeasureCell\n      width={cellWidth}\n      key={series.reactKey(SeriesDerivation.DELTA)}\n      value={<Delta\n        currentValue={currentValue}\n        previousValue={previousValue}\n        lowerIsBetter={series.measure.lowerIsBetter}\n        formatter={series.formatter()}\n      />} />\n  </React.Fragment>;\n};\n","/*\n * Copyright 2017-2018 Allegro.pl\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as d3 from \"d3\";\nimport { Map } from \"immutable\";\nimport { Datum } from \"plywood\";\nimport React from \"react\";\nimport { Essence } from \"../../../../common/models/essence/essence\";\nimport { classNames } from \"../../../utils/dom/dom\";\nimport \"./measure-row.scss\";\nimport { MeasureValue } from \"./measure-value\";\n\ninterface MeasureRowProps {\n  essence: Essence;\n  highlight: boolean;\n  dimmed: boolean;\n  style: React.CSSProperties;\n  datum: Datum;\n  cellWidth: number;\n  scales: Map<string, d3.ScaleLinear<number, number>>;\n  showBar: boolean;\n}\n\nexport const MeasureRow: React.FunctionComponent<MeasureRowProps> = props => {\n  const { datum, showBar, scales, cellWidth, highlight, dimmed, style, essence } = props;\n\n  const concreteSeries = essence.getConcreteSeries().toArray();\n\n  return <div\n    className={classNames(\"measure-row\", { highlight, dimmed })}\n    style={style}\n  >\n    {concreteSeries.map(series => {\n      return <MeasureValue\n        key={series.reactKey()}\n        series={series}\n        datum={datum}\n        highlight={highlight}\n        barScale={showBar ? scales.get(series.reactKey()) : null}\n        cellWidth={cellWidth}\n        showPrevious={essence.hasComparison()} />;\n    })}\n  </div>;\n};\n","/*\n * Copyright 2017-2018 Allegro.pl\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as d3 from \"d3\";\nimport { Map } from \"immutable\";\nimport { Datum, PseudoDatum } from \"plywood\";\nimport React from \"react\";\nimport { Essence } from \"../../../../common/models/essence/essence\";\nimport { Predicate } from \"../../../../common/utils/functional/functional\";\nimport { VisibleRows } from \"../visible-rows/visible-rows\";\nimport { MeasureRow } from \"./measure-row\";\n\ninterface MeasureRowsProps {\n  visibleRowsIndexRange: [number, number];\n  essence: Essence;\n  highlightedRowIndex: number | null;\n  scales: Map<string, d3.ScaleLinear<number, number>>;\n  data: PseudoDatum[];\n  hoverRow?: Datum;\n  cellWidth: number;\n  rowWidth: number;\n  showBarPredicate: Predicate<Datum>;\n}\n\nexport const MeasureRows: React.FunctionComponent<MeasureRowsProps> = props => {\n  const { rowWidth, showBarPredicate, essence, cellWidth, hoverRow, scales, data, visibleRowsIndexRange, highlightedRowIndex } = props;\n\n  return <VisibleRows\n    visibleRowsIndexRange={visibleRowsIndexRange}\n    highlightedRowIndex={highlightedRowIndex}\n    hoveredRowDatum={hoverRow}\n    rowsData={data}\n    renderRow={props => {\n      const { index, top, datum, highlight, dimmed } = props;\n      const rowStyle: React.CSSProperties = { top, width: rowWidth };\n      const showBar = showBarPredicate(datum);\n\n      return <MeasureRow\n        key={`row_${index}`}\n        essence={essence}\n        highlight={highlight}\n        dimmed={dimmed}\n        style={rowStyle}\n        datum={datum}\n        cellWidth={cellWidth}\n        showBar={showBar}\n        scales={scales} />;\n    }} />;\n};\n","/*\n * Copyright 2017-2018 Allegro.pl\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport React from \"react\";\nimport { SortDirection } from \"../../../../../common/models/sort/sort\";\nimport { classNames } from \"../../../../utils/dom/dom\";\nimport { SortIcon } from \"../../sort-icon/sort-icon\";\nimport \"./measure-header-cell.scss\";\n\ninterface MeasureHeaderCellProps {\n  width: number;\n  title: string;\n  sort: SortDirection | null;\n  className?: string;\n}\n\nexport const MeasureHeaderCell: React.FunctionComponent<MeasureHeaderCellProps> = ({ sort, width, title, className }) => {\n  const sorted = sort !== null;\n  return <div\n    className={classNames(\"measure-header-cell\", className, { sorted })}\n    style={{ width }}>\n    <div className=\"title-wrap\">{title}</div>\n    {sort && <SortIcon direction={sort} />}\n  </div>;\n};\n","/*\n * Copyright 2017-2018 Allegro.pl\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport { ConcreteSeries, SeriesDerivation } from \"../../../../../common/models/series/concrete-series\";\nimport { SeriesSort, Sort, SortDirection } from \"../../../../../common/models/sort/sort\";\nimport { MeasureHeaderCell } from \"./measure-header-cell\";\n\ninterface MeasuresHeaderProps {\n  cellWidth: number;\n  series: ConcreteSeries[];\n  sort: Sort;\n  showPrevious: boolean;\n}\n\nfunction sortDirection(commonSort: Sort, series: ConcreteSeries, period = SeriesDerivation.CURRENT): SortDirection | null {\n  const isSortedBy = commonSort instanceof SeriesSort && commonSort.reference === series.definition.key() && commonSort.period === period;\n  return isSortedBy ? commonSort.direction : null;\n}\n\nexport const MeasuresHeader: React.FunctionComponent<MeasuresHeaderProps> = props => {\n  const { cellWidth, series, sort, showPrevious } = props;\n\n  return <React.Fragment>\n    {series.map(serie => {\n      const currentMeasure = <MeasureHeaderCell\n        key={serie.reactKey()}\n        width={cellWidth}\n        title={serie.title()}\n        sort={sortDirection(sort, serie)} />;\n\n      if (!showPrevious) {\n        return currentMeasure;\n      }\n\n      return <React.Fragment key={serie.reactKey()}>\n        {currentMeasure}\n        <MeasureHeaderCell\n          key={serie.reactKey(SeriesDerivation.PREVIOUS)}\n          width={cellWidth}\n          title={serie.title(SeriesDerivation.PREVIOUS)}\n          sort={sortDirection(sort, serie, SeriesDerivation.PREVIOUS)} />\n        <MeasureHeaderCell\n          className=\"measure-delta\"\n          key={serie.reactKey(SeriesDerivation.DELTA)}\n          width={cellWidth}\n          title=\"Difference\"\n          sort={sortDirection(sort, serie, SeriesDerivation.DELTA)} />\n      </React.Fragment>;\n    })}\n  </React.Fragment>;\n};\n","/*\n * Copyright 2017-2018 Allegro.pl\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Datum, PseudoDatum } from \"plywood\";\nimport React from \"react\";\nimport { SPACE_LEFT } from \"../dimensions\";\nimport { VisibleRows } from \"../visible-rows/visible-rows\";\nimport \"./flattened-splits.scss\";\nimport { SplitValue } from \"./split-value\";\n\nexport interface SplitLabelProps {\n  datum: Datum;\n}\n\ninterface FlattenedSplitsProps {\n  visibleRowsIndexRange: [number, number];\n  data: PseudoDatum[];\n  hoverRow?: Datum;\n  segmentWidth: number;\n  highlightedRowIndex: number | null;\n  splitLabel: React.ComponentType<SplitLabelProps>;\n}\n\nexport const FlattenedSplits: React.FunctionComponent<FlattenedSplitsProps> = props => {\n  const { splitLabel: SplitLabel, data, highlightedRowIndex, hoverRow, visibleRowsIndexRange, segmentWidth } = props;\n\n  return <div className=\"flattened-splits-rows\">\n    <VisibleRows\n      visibleRowsIndexRange={visibleRowsIndexRange}\n      highlightedRowIndex={highlightedRowIndex}\n      rowsData={data}\n      hoveredRowDatum={hoverRow}\n      renderRow={props => {\n        const { index, top, datum, highlight, dimmed } = props;\n        const segmentStyle = { width: segmentWidth - SPACE_LEFT, top };\n\n        return <SplitValue\n          key={`splits_${index}`}\n          className=\"flattened-splits-row\"\n          style={segmentStyle}\n          dimmed={dimmed}\n          highlight={highlight}>\n          <SplitLabel datum={datum} />\n        </SplitValue>;\n      }} />\n  </div>;\n};\n","/*\n * Copyright 2017-2018 Allegro.pl\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport { ClientDataCube } from \"../../../../../common/models/data-cube/data-cube\";\nimport { findDimensionByName } from \"../../../../../common/models/dimension/dimensions\";\nimport { DimensionSort, Sort, SortDirection } from \"../../../../../common/models/sort/sort\";\nimport { Split } from \"../../../../../common/models/split/split\";\nimport { Splits } from \"../../../../../common/models/splits/splits\";\nimport { Corner } from \"../../corner/corner\";\nimport { SortIcon } from \"../../sort-icon/sort-icon\";\nimport \"./split-columns.scss\";\n\ninterface SplitColumnsHeader {\n  dataCube: ClientDataCube;\n  sort?: Sort;\n  splits: Splits;\n}\n\nfunction sortDirection(split: Split, sort: Sort): SortDirection | null {\n  const isCurrentSort = sort instanceof DimensionSort && split.reference === sort.reference;\n  return isCurrentSort ? sort.direction : null;\n}\n\nexport const SplitColumnsHeader: React.FunctionComponent<SplitColumnsHeader> = ({ sort, splits, dataCube }) => {\n  return <Corner>\n    <div className=\"header-split-columns\">\n      {splits.splits.toArray().map(split => {\n        const { reference } = split;\n        const title = findDimensionByName(dataCube.dimensions, reference).title;\n        const direction = sortDirection(split, sort);\n        return <div className=\"header-split-column\" key={reference}>\n          <div className=\"header-split-column-title\">{title}</div>\n          {direction && <div className=\"header-split-column-sort-icon\">\n            <SortIcon direction={direction} />\n          </div>}\n        </div>;\n      })}\n    </div>\n  </Corner>;\n};\n","/*\n * Copyright 2017-2018 Allegro.pl\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Timezone } from \"chronoshift\";\nimport { List } from \"immutable\";\nimport { PseudoDatum } from \"plywood\";\nimport React from \"react\";\nimport { Split } from \"../../../../common/models/split/split\";\nimport { formatSegment } from \"../../../../common/utils/formatter/formatter\";\nimport \"./flattened-split-columns.scss\";\n\ninterface FlattenedSplitColumnsProps {\n  splits: List<Split>;\n  datum: PseudoDatum;\n  timezone: Timezone;\n}\n\nexport const FlattenedSplitColumns: React.FunctionComponent<FlattenedSplitColumnsProps> = ({ splits, datum, timezone }) =>\n  <React.Fragment>\n    {splits.map(split => {\n      const { reference } = split;\n      const value = split.selectValue(datum);\n      return <div key={reference} className=\"flattened-split-value\">{formatSegment(value, timezone)}</div>;\n    })}\n  </React.Fragment>;\n","/*\n * Copyright 2017-2021 Allegro.pl\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Dimension } from \"../../../../common/models/dimension/dimension\";\nimport { findDimensionByName } from \"../../../../common/models/dimension/dimensions\";\nimport { Essence } from \"../../../../common/models/essence/essence\";\nimport { SeriesDerivation } from \"../../../../common/models/series/concrete-series\";\nimport { Series } from \"../../../../common/models/series/series\";\nimport { integerDivision } from \"../../../../common/utils/general/general\";\n\ninterface WhiteSpace {\n  element: \"whitespace\";\n}\n\ninterface SeriesPosition {\n  element: \"series\";\n  series: Series;\n  period: SeriesDerivation;\n}\n\ninterface DimensionPosition {\n  element: \"dimension\";\n  dimension: Dimension;\n}\n\nexport type Position = WhiteSpace | SeriesPosition | DimensionPosition;\n\nexport function splitPosition(x: number, essence: Essence, segmentWidth: number): Position {\n  const splitCount = essence.splits.length();\n  const splitColumnWidth = segmentWidth / splitCount;\n  const splitIndex = Math.floor(x / splitColumnWidth);\n  const split = essence.splits.getSplit(splitIndex);\n  const dimension = findDimensionByName(essence.dataCube.dimensions, split.reference);\n  if (!dimension) {\n    return { element: \"whitespace\" };\n  }\n  return { element: \"dimension\", dimension };\n}\n\nfunction indexToPeriod(index: number): SeriesDerivation {\n  return [SeriesDerivation.CURRENT, SeriesDerivation.PREVIOUS, SeriesDerivation.DELTA][index % 3];\n}\n\nexport function seriesPosition(x: number, essence: Essence, segmentWidth: number, columnWidth: number): Position {\n  const seriesList = essence.series.series;\n  const xOffset = x - segmentWidth;\n  const seriesIndex = Math.floor(xOffset / columnWidth);\n  if (essence.hasComparison()) {\n    const nominalIndex = integerDivision(seriesIndex, 3);\n    const series = seriesList.get(nominalIndex);\n    if (!series) return { element: \"whitespace\" };\n    const period = indexToPeriod(seriesIndex);\n    return { element: \"series\", series, period };\n  }\n  const series = seriesList.get(seriesIndex);\n  if (!series) return { element: \"whitespace\" };\n  return { element: \"series\", series, period: SeriesDerivation.CURRENT };\n}\n","/*\n * Copyright 2017-2021 Allegro.pl\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Essence } from \"../../../../common/models/essence/essence\";\nimport { Split } from \"../../../../common/models/split/split\";\n\nexport function mainSplit(essence: Essence): Split {\n  return essence.splits.getSplit(0);\n}\n","/*\n * Copyright 2017-2021 Allegro.pl\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport { Clicker } from \"../../../common/models/clicker/clicker\";\nimport { Dimension } from \"../../../common/models/dimension/dimension\";\nimport { Essence, VisStrategy } from \"../../../common/models/essence/essence\";\nimport { SeriesDerivation } from \"../../../common/models/series/concrete-series\";\nimport { Series } from \"../../../common/models/series/series\";\nimport { DimensionSort, SeriesSort, Sort, SortDirection } from \"../../../common/models/sort/sort\";\nimport { Stage } from \"../../../common/models/stage/stage\";\nimport { Binary, Ternary, Unary } from \"../../../common/utils/functional/functional\";\nimport { ScrollerPart } from \"../../components/scroller/scroller\";\nimport { MEASURE_WIDTH, SPACE_LEFT } from \"../../components/tabular-scroller/dimensions\";\nimport { measureColumnsCount } from \"../../components/tabular-scroller/utils/measure-columns-count\";\nimport { Position, seriesPosition, splitPosition } from \"./utils/hover-position\";\nimport { mainSplit } from \"./utils/main-split\";\n\ninterface InteractionsProps {\n  handleClick: Ternary<number, number, ScrollerPart, void>;\n  setScrollTop: Binary<number, number, void>;\n  columnWidth: number;\n  scrollTop: number;\n}\n\ninterface InteractionControllerProps {\n  essence: Essence;\n  clicker: Clicker;\n  stage: Stage;\n  children: Unary<InteractionsProps, React.ReactNode>;\n  segmentWidth: number;\n}\n\ninterface InteractionControllerState {\n  scrollTop: number;\n}\n\nexport class InteractionController extends React.Component<InteractionControllerProps, InteractionControllerState> {\n\n  state: InteractionControllerState = {\n    scrollTop: 0\n  };\n\n  setScrollTop = (scrollTop: number) => this.setState({ scrollTop });\n\n  private getIdealColumnWidth(): number {\n    const { stage, segmentWidth, essence } = this.props;\n    const availableWidth = stage.width - SPACE_LEFT - segmentWidth;\n    const count = measureColumnsCount(essence);\n\n    return count * MEASURE_WIDTH >= availableWidth ? MEASURE_WIDTH : availableWidth / count;\n  }\n\n  private setSortToSeries(series: Series, period: SeriesDerivation) {\n    const sort = new SeriesSort({ reference: series.key(), period, direction: SortDirection.descending });\n    this.setSort(sort);\n  }\n\n  private setSortToDimension(dimension: Dimension) {\n    const sort = new DimensionSort({ reference: dimension.name, direction: SortDirection.descending });\n    this.setSort(sort);\n  }\n\n  private setSort(sort: Sort) {\n    const { clicker, essence } = this.props;\n    const { splits } = essence;\n    const split = mainSplit(essence);\n    const newSort = split.sort.equals(sort)\n      // NOTE: this type assertion is needed, because set method on DimensionSort and SeriesSort has overspecialised return type\n      ? (sort as DimensionSort).set(\"direction\", SortDirection.ascending)\n      : sort;\n    clicker.changeSplits(splits.replace(split, split.changeSort(newSort)), VisStrategy.KeepAlways);\n  }\n\n  calculatePosition(x: number, y: number, part: ScrollerPart): Position {\n    const { segmentWidth, essence } = this.props;\n    switch (part) {\n      case \"top-left-corner\":\n        return splitPosition(x, essence, segmentWidth);\n      case \"top-gutter\":\n        return seriesPosition(x, essence, segmentWidth, this.getIdealColumnWidth());\n      default:\n        return { element: \"whitespace\" };\n    }\n  }\n\n  handleClick = (x: number, y: number, part: ScrollerPart) => {\n    const position = this.calculatePosition(x, y, part);\n\n    switch (position.element) {\n      case \"dimension\":\n        this.setSortToDimension(position.dimension);\n        break;\n      case \"series\":\n        this.setSortToSeries(position.series, position.period);\n        break;\n    }\n  }\n\n  render() {\n    const { children } = this.props;\n    const { scrollTop } = this.state;\n\n    return <React.Fragment>\n      {children({\n        columnWidth: this.getIdealColumnWidth(),\n        scrollTop,\n        handleClick: this.handleClick,\n        setScrollTop: this.setScrollTop\n      })}\n    </React.Fragment>;\n  }\n\n}\n","/*\n * Copyright 2017-2021 Allegro.pl\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Datum } from \"plywood\";\n\nexport const NESTING_NAME = \"__nest\";\n\nexport function isTotalDatum(datum: Datum): boolean {\n  return datum[NESTING_NAME] === 0;\n}\n","/*\n * Copyright 2017-2021 Allegro.pl\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Timezone } from \"chronoshift\";\nimport { List } from \"immutable\";\nimport { Datum } from \"plywood\";\nimport React from \"react\";\nimport { Split } from \"../../../common/models/split/split\";\nimport { FlattenedSplitColumns } from \"../../components/tabular-scroller/splits/flattened-split-columns\";\nimport { isTotalDatum } from \"./utils/total-datum\";\n\ninterface SplitLabelsProps {\n  splits: List<Split>;\n  timezone: Timezone;\n  datum: Datum;\n}\n\nexport const SplitLabels: React.FunctionComponent<SplitLabelsProps> = props => {\n  const { splits, datum, timezone } = props;\n  if (isTotalDatum(datum)) {\n    return <div key=\"totals\" className=\"flattened-split-value\">Total</div>;\n  }\n  return <FlattenedSplitColumns splits={splits} datum={datum} timezone={timezone} />;\n};\n","/*\n * Copyright 2017-2021 Allegro.pl\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Dataset } from \"plywood\";\nimport React from \"react\";\nimport { Essence } from \"../../../common/models/essence/essence\";\nimport { Stage } from \"../../../common/models/stage/stage\";\nimport { Binary, complement, Ternary, Unary } from \"../../../common/utils/functional/functional\";\nimport { Direction, ResizeHandle } from \"../../components/resize-handle/resize-handle\";\nimport { Scroller, ScrollerLayout, ScrollerPart } from \"../../components/scroller/scroller\";\nimport { HEADER_HEIGHT, ROW_HEIGHT, SEGMENT_WIDTH, SPACE_RIGHT } from \"../../components/tabular-scroller/dimensions\";\nimport { MeasuresHeader } from \"../../components/tabular-scroller/header/measures/measures-header\";\nimport { SplitColumnsHeader } from \"../../components/tabular-scroller/header/splits/split-columns\";\nimport { MeasureRows } from \"../../components/tabular-scroller/measures/measure-rows\";\nimport { FlattenedSplits } from \"../../components/tabular-scroller/splits/flattened-splits\";\nimport { getScalesForColumns } from \"../../components/tabular-scroller/utils/get-scales-for-columns\";\nimport { measureColumnsCount } from \"../../components/tabular-scroller/utils/measure-columns-count\";\nimport { visibleIndexRange } from \"../../components/tabular-scroller/visible-rows/visible-index-range\";\nimport { selectDatums } from \"../../utils/dataset/selectors/selectors\";\nimport { SplitLabels } from \"./split-labels\";\nimport { mainSplit } from \"./utils/main-split\";\nimport { isTotalDatum, NESTING_NAME } from \"./utils/total-datum\";\n\ninterface ScrolledGridProps {\n  essence: Essence;\n  data: Dataset;\n  stage: Stage;\n  handleClick: Ternary<number, number, ScrollerPart, void>;\n  setScrollTop: Binary<number, number, void>;\n  setSegmentWidth: Unary<number, void>;\n  columnWidth: number;\n  segmentWidth: number;\n  availableWidth: number;\n  scrollTop: number;\n}\n\nexport const ScrolledGrid: React.FunctionComponent<ScrolledGridProps> = props => {\n  const {\n    essence,\n    data,\n    scrollTop,\n    segmentWidth,\n    setScrollTop,\n    setSegmentWidth,\n    handleClick,\n    columnWidth,\n    stage,\n    availableWidth\n  } = props;\n\n  const datums = selectDatums(data.flatten({\n    order: \"preorder\",\n    nestingName: NESTING_NAME\n  }));\n  const scales = getScalesForColumns(essence, datums.filter(complement(isTotalDatum)));\n  const rowsCount = datums.length;\n  const visibleRowsRange = visibleIndexRange(rowsCount, stage.height, scrollTop);\n  const columnsCount = measureColumnsCount(essence);\n  const maxSegmentWidth = availableWidth || SEGMENT_WIDTH;\n  const mainSort = mainSplit(essence).sort;\n\n  const layout: ScrollerLayout = {\n    bodyWidth: columnWidth * columnsCount + SPACE_RIGHT,\n    bodyHeight: rowsCount * ROW_HEIGHT,\n    bottom: 0,\n    left: segmentWidth,\n    right: 0,\n    top: HEADER_HEIGHT\n  };\n\n  const { dataCube, splits } = essence;\n\n  return <React.Fragment>\n    <ResizeHandle\n      direction={Direction.LEFT}\n      onResize={setSegmentWidth}\n      min={SEGMENT_WIDTH}\n      max={maxSegmentWidth}\n      value={segmentWidth}\n    />\n    <Scroller\n      layout={layout}\n      onScroll={setScrollTop}\n      onClick={handleClick}\n      topGutter={<MeasuresHeader\n        cellWidth={columnWidth}\n        series={essence.getConcreteSeries().toArray()}\n        sort={mainSort}\n        showPrevious={essence.hasComparison()}/>}\n\n      leftGutter={<FlattenedSplits\n        visibleRowsIndexRange={visibleRowsRange}\n        data={datums}\n        splitLabel={({ datum }) =>\n          <SplitLabels\n            splits={essence.splits.splits}\n            timezone={essence.timezone}\n            datum={datum}/>}\n        segmentWidth={segmentWidth}\n        highlightedRowIndex={null}/>}\n\n      topLeftCorner={<SplitColumnsHeader\n        dataCube={dataCube}\n        sort={mainSort}\n        splits={splits}/>}\n\n      body={datums && <MeasureRows\n        visibleRowsIndexRange={visibleRowsRange}\n        essence={essence}\n        highlightedRowIndex={null}\n        scales={scales}\n        data={datums}\n        showBarPredicate={complement(isTotalDatum)}\n        cellWidth={columnWidth}\n        rowWidth={columnWidth * columnsCount}/>}\n    />\n  </React.Fragment>;\n};\n","/*\n * Copyright 2017-2021 Allegro.pl\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport { isContinuous } from \"../../../common/models/dimension/dimension\";\nimport { findDimensionByName } from \"../../../common/models/dimension/dimensions\";\nimport { granularityToString } from \"../../../common/models/granularity/granularity\";\nimport { DimensionSortOn, SortOn } from \"../../../common/models/sort-on/sort-on\";\nimport { Sort } from \"../../../common/models/sort/sort\";\nimport { Split } from \"../../../common/models/split/split\";\nimport { GRID_LIMITS } from \"../../../common/visualization-manifests/grid/grid\";\nimport { GranularityPicker } from \"../../components/split-menu/granularity-picker\";\nimport { LimitDropdown } from \"../../components/split-menu/limit-dropdown\";\nimport { SortDropdown } from \"../../components/split-menu/sort-dropdown\";\nimport { SplitMenuProps } from \"../../components/split-menu/split-menu\";\nimport { createSplit, SplitMenuBase, validateSplit } from \"../../components/split-menu/split-menu-base\";\nimport { mainSplit } from \"./utils/main-split\";\n\nexport const GridSplitMenu: React.FunctionComponent<SplitMenuProps> = props => {\n  const { essence, split, dimension } = props;\n  const controlSplit = split.equals(mainSplit(essence));\n  if (controlSplit) {\n    return <GridControlMenu {...props} />;\n  }\n  if (isContinuous(dimension)) {\n    return <SplitGranularityMenu {...props} />;\n  }\n  return null;\n};\n\ninterface SplitGranularityMenuState {\n  granularity: string;\n}\n\nclass SplitGranularityMenu extends React.Component<SplitMenuProps, SplitGranularityMenuState> {\n\n  state: SplitGranularityMenuState = {\n    granularity: granularityToString(this.props.split.bucket)\n  };\n\n  saveGranularity = (granularity: string) => this.setState({ granularity });\n\n  saveSplit = () => {\n    const { split, saveSplit } = this.props;\n    saveSplit(split, this.createSplit());\n  };\n\n  private createSplit(): Split {\n    const { split, dimension } = this.props;\n    const { granularity } = this.state;\n    return createSplit({ split, dimension, granularity });\n  }\n\n  validate() {\n    const { dimension, split } = this.props;\n    const { granularity } = this.state;\n    return validateSplit({ split, dimension, granularity });\n  }\n\n  render() {\n    const { containerStage, dimension, onClose, openOn } = this.props;\n    const { granularity } = this.state;\n    return <SplitMenuBase\n      openOn={openOn}\n      containerStage={containerStage}\n      onClose={onClose}\n      onSave={this.saveSplit}\n      dimension={dimension}\n      isValid={this.validate()}>\n      <GranularityPicker\n        dimension={dimension}\n        granularity={granularity}\n        granularityChange={this.saveGranularity}/>\n    </SplitMenuBase>;\n  }\n}\n\ninterface GridControlMenuProps {\n  granularity?: string;\n  sort?: Sort;\n  limit?: number;\n}\n\nclass GridControlMenu extends React.Component<SplitMenuProps, GridControlMenuProps> {\n\n  state: GridControlMenuProps = this.initState();\n\n  private initState(): GridControlMenuProps {\n    const { split: { bucket, sort, limit } } = this.props;\n    return {\n      sort,\n      limit,\n      granularity: bucket && granularityToString(bucket)\n    };\n  }\n\n  saveGranularity = (granularity: string) => this.setState({ granularity });\n\n  saveSort = (sort: Sort) => this.setState({ sort });\n\n  saveLimit = (limit: number) => this.setState({ limit });\n\n  saveSplit = () => {\n    const { split, saveSplit } = this.props;\n    saveSplit(split, this.createSplit());\n  };\n\n  private createSplit(): Split {\n    const { split, dimension } = this.props;\n    const { limit, sort, granularity } = this.state;\n    return createSplit({ split, dimension, limit, sort, granularity });\n  }\n\n  validate() {\n    const { dimension, split } = this.props;\n    const { limit, sort, granularity } = this.state;\n    return validateSplit({ split, dimension, limit, sort, granularity });\n  }\n\n  render() {\n    const { containerStage, dimension, onClose, essence, openOn } = this.props;\n    const { granularity, sort, limit } = this.state;\n    const { dimensions } = essence.dataCube;\n    const sortOptions = [\n      ...essence.splits.splits.toArray().map(({ reference }) => new DimensionSortOn(findDimensionByName(dimensions, reference))),\n      ...essence.seriesSortOns(true).toArray()\n    ];\n    return <SplitMenuBase\n      openOn={openOn}\n      containerStage={containerStage}\n      onClose={onClose}\n      onSave={this.saveSplit}\n      dimension={dimension}\n      isValid={this.validate()}>\n      <GranularityPicker\n        dimension={dimension}\n        granularity={granularity}\n        granularityChange={this.saveGranularity}/>\n      <SortDropdown\n        direction={sort.direction}\n        selected={SortOn.fromSort(sort, essence)}\n        options={sortOptions}\n        onChange={this.saveSort}/>\n      <LimitDropdown\n        selectedLimit={limit}\n        limits={GRID_LIMITS}\n        includeNone={false}\n        onLimitSelect={this.saveLimit}/>\n    </SplitMenuBase>;\n }\n}\n","/*\n * Copyright 2017-2021 Allegro.pl\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport { isContinuous } from \"../../../common/models/dimension/dimension\";\nimport { SplitTileBaseProps } from \"../../components/split-tile/split-tile\";\nimport { SvgIcon } from \"../../components/svg-icon/svg-icon\";\nimport { WithRef } from \"../../components/with-ref/with-ref\";\nimport { classNames } from \"../../utils/dom/dom\";\nimport { GridSplitMenu } from \"./grid-split-menu\";\nimport { mainSplit } from \"./utils/main-split\";\n\nexport const GridSplitTile: React.FunctionComponent<SplitTileBaseProps> = props => {\n  const { essence, open: isOpened, split, dimension, style, removeSplit, updateSplit, openMenu, closeMenu, dragStart, containerStage } = props;\n\n  const enabled = split.equals(mainSplit(essence)) || isContinuous(dimension);\n\n  const title = split.getTitle(dimension);\n\n  const remove = (e: React.MouseEvent<HTMLElement>) => {\n    e.stopPropagation();\n    removeSplit(split);\n  };\n\n  const open = () => {\n    if (!enabled) return;\n    openMenu(split);\n  };\n\n  return <WithRef>\n    {({ ref: openOn, setRef }) => <React.Fragment>\n      <div\n        className={classNames(\"tile dimension\", { disabled: !enabled })}\n        key={split.toKey()}\n        ref={setRef}\n        draggable={true}\n        onClick={open}\n        onDragStart={e => dragStart(dimension.title, split, e)}\n        style={style}\n        title={title}\n      >\n        <div className=\"reading\">{title}</div>\n        <div className=\"remove\"\n             onClick={remove}>\n          <SvgIcon svg={require(\"../../icons/x.svg\")} />\n        </div>\n      </div>\n      {enabled && isOpened && openOn && <GridSplitMenu\n        saveSplit={updateSplit}\n        essence={essence}\n        openOn={openOn}\n        containerStage={containerStage}\n        onClose={closeMenu}\n        dimension={dimension}\n        split={split} />}\n    </React.Fragment>}\n  </WithRef>;\n};\n","/*\n * Copyright 2017-2021 Allegro.pl\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport React from \"react\";\nimport { SplitTilesRow, SplitTilesRowBaseProps } from \"../../components/split-tile/split-tiles-row\";\nimport { VisualizationControls, VisualizationControlsBaseProps } from \"../../views/cube-view/center-panel/center-panel\";\nimport { GridSplitTile } from \"./grid-split-tile\";\n\nfunction GridSplitTilesRow(props: SplitTilesRowBaseProps) {\n  return <SplitTilesRow {...props} splitTileComponent={GridSplitTile} />;\n}\n\nexport const GridVisualizationControls: React.FunctionComponent<VisualizationControlsBaseProps> = props => {\n  return <VisualizationControls{...props} splitTilesRow={GridSplitTilesRow} />;\n};\n","/*\n * Copyright 2017-2018 Allegro.pl\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport { ChartProps } from \"../../../common/models/chart-props/chart-props\";\nimport { Unary } from \"../../../common/utils/functional/functional\";\nimport { MIN_DIMENSION_WIDTH, SEGMENT_WIDTH } from \"../../components/tabular-scroller/dimensions\";\nimport { withProps } from \"../../utils/react/with-props\";\nimport { ChartPanel, VisualizationProps } from \"../../views/cube-view/center-panel/center-panel\";\nimport \"./grid.scss\";\nimport { InteractionController } from \"./interaction-controller\";\nimport { ScrolledGrid } from \"./scrolled-grid\";\nimport { GridVisualizationControls } from \"./visualization-controls\";\n\ninterface GridProps extends ChartProps {\n  setSegmentWidth: Unary<number, void>;\n  segmentWidth: number;\n}\n\nconst Grid: React.FunctionComponent<GridProps> = props => {\n  const { essence, segmentWidth, setSegmentWidth, stage, clicker, data } = props;\n  const availableWidth = stage.width - MIN_DIMENSION_WIDTH;\n\n  return <div className=\"grid-container\">\n    <InteractionController\n      essence={essence}\n      clicker={clicker}\n      stage={stage}\n      segmentWidth={segmentWidth}\n    >\n      {({\n          columnWidth,\n          scrollTop,\n          setScrollTop,\n          handleClick\n        }) =>\n        <ScrolledGrid\n          essence={essence}\n          data={data}\n          stage={stage}\n          handleClick={handleClick}\n          setScrollTop={setScrollTop}\n          setSegmentWidth={setSegmentWidth}\n          availableWidth={availableWidth}\n          columnWidth={columnWidth}\n          segmentWidth={segmentWidth}\n          scrollTop={scrollTop}/>}\n    </InteractionController>\n  </div>;\n};\n\ninterface GridVisualizationState {\n  segmentWidth: number;\n}\n\nexport default class GridVisualization extends React.Component<VisualizationProps, GridVisualizationState> {\n  state: GridVisualizationState = {\n    segmentWidth: SEGMENT_WIDTH\n  };\n\n  setSegmentWidth = (segmentWidth: number) => {\n    this.setState({ segmentWidth });\n  }\n\n  render() {\n    const { segmentWidth } = this.state;\n    return <React.Fragment>\n      <GridVisualizationControls {...this.props} />\n      <ChartPanel {...this.props}\n                  chartComponent={withProps(Grid, { segmentWidth, setSegmentWidth: this.setSegmentWidth })}/>\n    </React.Fragment>;\n  }\n}\n"],"sourceRoot":""}